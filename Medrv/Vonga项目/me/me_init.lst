 LOC CODE        LINE   SOURCELINE

                     1   ; TASKING C166/ST10 C compiler v7.5r5 Build 519.1.2 SN ????????
                     2   ; options: -c -g -AF -Be -xmfp -e -s -Ml -znocustack -OaBcdEFghjkLnopQrStUwX -T0
                     3   ;          -w68 -w130 -w150 -w200 -w196 -D_DEBUG -BZc166sv1sp -BZc166sv1cp
                     4   ;          -BZc166sv1sp2 -BZcpu_reti_int -BZc166sv1ext -BK -BZno_cpu_jmpra_cache
                     5   ;          -BM -BZc166sv1div -DPRJ_UW_LOG -mPR=0,4000 -I./include -I.
                     6   ;          -Id:/vme_new/vmesdk/include -D_C166_ARCH=1 -D_DEBUG -I -I.
                     7   $DEBUG
                     8   $NOLOCALS
                     9   $EXTEND
                    10   $NOMOD166
                    11   $STDNAMES(reg.def)
                    12   $SEGMENTED
                    13   $CASE
                    14   $MODEL(LARGE)
                    15   $CHECKMULDIV
                    16   $CHECKCPU21
                    17   $CHECKC166SV1SP
                    18   $CHECKC166SV1CP
                    19   $CHECKC166SV1DIV
                    20   $CHECKC166SV1EXTSEQ
                    21   $CHECKC166SV1SP2
                    22   $CHECKCPURETIINT
                    23           NAME    ME_INIT_C
                    24           ASSUME  DPP3:SYSTEM
                    25           ASSUME  DPP2:C166_DGROUP
                    26           ?SYMB   'me_init.c',32,80,16
                    27           ?SYMB   '',1,82,0
                    28           ?SYMB   '80166',0,84,0
                    29           ?SYMB   '',0,81,0
                    30           ?SYMB   'void',00H,45,1
                    31           ?SYMB   'char',080000H,45,2
                    32           ?SYMB   'unsigned char',080000H,45,3
                    33           ?SYMB   'short',0100000H,45,4
                    34           ?SYMB   'unsigned short',0100000H,45,5
                    35           ?SYMB   'long',0200000H,45,6
                    36           ?SYMB   'unsigned long',0200000H,45,7
                    37           ?SYMB   'float',0200000H,45,10
                    38           ?SYMB   'double',0400000H,45,11
                    39           ?SYMB   'int',0100000H,45,16
                    40           ?SYMB   'unsigned int',0100000H,45,18
                    41           ?SYMB   'bit',010000H,7,256
                    42           ?SYMB   'me_init.c',0,29,1
                    43           ?SYMB   '',0,86,1
                    44   ; me_init.c    1        /**********************************************************************
                         ****\ 
                    45   ; me_init.c    2         *
                    46   ; me_init.c    3         *                      Hopen Software System
                    47   ; me_init.c    4         *
                    48   ; me_init.c    5         * Copyright (c) 2000-2001 by Hopen Software Engineering Co., Ltd. 
                    49   ; me_init.c    6         *                       All Rights Reserved
                    50   ; me_init.c    7         *
                    51   ; me_init.c    8         * Model   :    // For Siemens MC388
                    52   ; me_init.c    9         *
                    53   ; me_init.c   10         * Filename:    Me_Init.c
                    54   ; me_init.c   11         *
                    55   ; me_init.c   12         * Purpose :
                    56   ; me_init.c   13         *
                    57   ; me_init.c   14         * Author  :    Jingjing Xu
                    58   ; me_init.c   15        \**********************************************************************
                         ****/
                    59   ; me_init.c   16        
                    60   ; me_init.c   17        
                    61   ; me_init.c   18        #include "string.h"
                    62           ?SYMB   './include\string.h',0,29,2
                    63           ?SYMB   '',0,86,2
                    64           ?SYMB   'size_t',18,13,257
                    65           ?SYMB   '',0,86,1
                    66   ; me_init.c   19        #include "stdlib.h"
                    67           ?SYMB   './include\stdlib.h',0,29,2
                    68           ?SYMB   '',0,86,2
                    69           ?SYMB   'T$1',0,40,258
                    70           ?SYMB   'rem',0,23,16
                    71           ?SYMB   'quot',16,23,16
                    72           ?SYMB   '',32,18,0
                    73           ?SYMB   'div_t',258,13,259
                    74           ?SYMB   'T$2',0,40,260
                    75           ?SYMB   'rem',0,23,6
                    76           ?SYMB   'quot',32,23,6
                    77           ?SYMB   '',64,18,0
                    78           ?SYMB   'ldiv_t',260,13,261
                    79           ?SYMB   '',0,86,1
                    80   ; me_init.c   20        #include "window.h"
                    81           ?SYMB   './include\window.h',0,29,2
                    82           ?SYMB   '',0,86,2
                    83           ?SYMB   './include\hpdef.h',0,29,3
                    84           ?SYMB   '',0,86,3
                    85           ?SYMB   'BOOL',16,13,262
                    86           ?SYMB   'BYTE',3,13,263
                    87           ?SYMB   'WORD',5,13,264
                    88           ?SYMB   'IWORD',4,13,265
                    89           ?SYMB   'SHORT',4,13,266
                    90           ?SYMB   'UINT',18,13,267
                    91           ?SYMB   'DWORD',7,13,268
                    92           ?SYMB   '',01a0002H,38,270
                    93           ?SYMB   'LPSTR',270,13,271
                    94           ?SYMB   '',01a0001H,38,273
                    95           ?SYMB   'HANDLE',273,13,274
                    96           ?SYMB   '',0,86,2
                    97           ?SYMB   './include\hp_diag.h',0,29,3
                    98           ?SYMB   '',0,86,3
                    99           ?SYMB   '',0,86,2
                   100           ?SYMB   './include\hp_kern.h',0,29,3
                   101           ?SYMB   '',0,86,3
                   102           ?SYMB   './include\hpdef.h',0,29,4
                   103           ?SYMB   '',0,86,4
                   104           ?SYMB   '',0,86,3
                   105           ?SYMB   'tid_t',16,13,275
                   106           ?SYMB   'pid_t',16,13,276
                   107           ?SYMB   'm_mutex',0,40,277
                   108           ?SYMB   'm_lock',0,23,16
                   109           ?SYMB   'm_wait',16,23,16
                   110           ?SYMB   'm_taskid',32,23,4
                   111           ?SYMB   'm_count',48,23,4
                   112           ?SYMB   'm_flag',64,23,4
                   113           ?SYMB   'm_unused',80,23,4
                   114           ?SYMB   '',96,18,0
                   115           ?SYMB   '',01a0115H,38,279
                   116           ?SYMB   'PMUTEX',279,13,280
                   117           ?SYMB   'OSHANDLE',273,13,281
                   118           ?SYMB   'sysclock_t',7,13,282
                   119           ?SYMB   'HGLOBAL',273,13,283
                   120           ?SYMB   'T$3',0,40,284
                   121           ?SYMB   'StartAddr',0,23,7
                   122           ?SYMB   'initSize',32,23,7
                   123           ?SYMB   'FreeSize',64,23,7
                   124           ?SYMB   '',96,18,0
                   125           ?SYMB   'HeapInfo',284,13,285
                   126           ?SYMB   'HLOCAL',273,13,286
                   127           ?SYMB   '',0,86,2
                   128           ?SYMB   'LONG',6,13,287
                   129           ?SYMB   'HINSTANCE__',0,40,288
                   130           ?SYMB   'unused',0,23,16
                   131           ?SYMB   '',16,18,0
                   132           ?SYMB   '',01a0120H,38,290
                   133           ?SYMB   'HINSTANCE',290,13,291
                   134           ?SYMB   '_SYSTEMTIME',0,40,292
                   135           ?SYMB   'wYear',0,23,264
                   136           ?SYMB   'wMonth',16,23,264
                   137           ?SYMB   'wDayOfWeek',32,23,264
                   138           ?SYMB   'wDay',48,23,264
                   139           ?SYMB   'wHour',64,23,264
                   140           ?SYMB   'wMinute',80,23,264
                   141           ?SYMB   'wSecond',96,23,264
                   142           ?SYMB   'wMilliseconds',112,23,264
                   143           ?SYMB   '',128,18,0
                   144           ?SYMB   '',01a0124H,38,294
                   145           ?SYMB   'PSYSTEMTIME',294,13,295
                   146           ?SYMB   'SYSTEMTIME',292,13,296
                   147           ?SYMB   '',012a0002H,5,297
                   148           ?SYMB   '',16,47,298
                   149           ?SYMB   '',0,30,0
                   150           ?SYMB   '',31,49,0
                   151           ?SYMB   '_TIME_ZONE_INFORMATION',0,40,299
                   152           ?SYMB   'Bias',0,23,287
                   153           ?SYMB   'StandardName',32,23,297
                   154           ?SYMB   'StandardDate',288,23,296
                   155           ?SYMB   'StandardBias',416,23,287
                   156           ?SYMB   'DaylightName',448,23,297
                   157           ?SYMB   'DaylightDate',704,23,296
                   158           ?SYMB   'DaylightBias',832,23,287
                   159           ?SYMB   '',864,18,0
                   160           ?SYMB   '',01a012bH,38,301
                   161           ?SYMB   'PTIME_ZONE_INFORMATION',301,13,302
                   162           ?SYMB   'TIME_ZONE_INFORMATION',299,13,303
                   163           ?SYMB   'PCSTR',270,13,304
                   164           ?SYMB   'HRSRC__',0,40,305
                   165           ?SYMB   'unused',0,23,16
                   166           ?SYMB   '',16,18,0
                   167           ?SYMB   '',01a0131H,38,307
                   168           ?SYMB   'HRSRC',307,13,308
                   169           ?SYMB   'PSTR',270,13,309
                   170           ?SYMB   'WCHAR',5,13,310
                   171           ?SYMB   'LPCSTR',270,13,311
                   172           ?SYMB   '',01a0136H,38,313
                   173           ?SYMB   'LPWSTR',313,13,314
                   174           ?SYMB   'LPCWSTR',313,13,315
                   175           ?SYMB   '',01a0106H,38,317
                   176           ?SYMB   'LPBOOL',317,13,318
                   177           ?SYMB   'COLORREF',268,13,319
                   178           ?SYMB   'LPCTSTR',271,13,320
                   179           ?SYMB   'HDC__',0,40,321
                   180           ?SYMB   'unused',0,23,16
                   181           ?SYMB   '',16,18,0
                   182           ?SYMB   '',01a0141H,38,323
                   183           ?SYMB   'HDC',323,13,324
                   184           ?SYMB   'T$4',0,40,325
                   185           ?SYMB   'cbSize',0,23,16
                   186           ?SYMB   'lpszDocName',16,23,311
                   187           ?SYMB   'lpszOutput',48,23,311
                   188           ?SYMB   'lpszDatatype',80,23,311
                   189           ?SYMB   'fwType',112,23,268
                   190           ?SYMB   '',144,18,0
                   191           ?SYMB   'DOCINFO',325,13,326
                   192           ?SYMB   'tagRECT',0,40,327
                   193           ?SYMB   'left',0,23,287
                   194           ?SYMB   'top',32,23,287
                   195           ?SYMB   'right',64,23,287
                   196           ?SYMB   'bottom',96,23,287
                   197           ?SYMB   '',128,18,0
                   198           ?SYMB   '',01a0147H,38,329
                   199           ?SYMB   'PRECT',329,13,330
                   200           ?SYMB   'tagPOINT',0,40,331
                   201           ?SYMB   'x',0,23,287
                   202           ?SYMB   'y',32,23,287
                   203           ?SYMB   '',64,18,0
                   204           ?SYMB   '',01a014bH,38,333
                   205           ?SYMB   'PPOINT',333,13,334
                   206           ?SYMB   'tagSIZE',0,40,335
                   207           ?SYMB   'cx',0,23,287
                   208           ?SYMB   'cy',32,23,287
                   209           ?SYMB   '',64,18,0
                   210           ?SYMB   '',01a014fH,38,337
                   211           ?SYMB   'PSIZE',337,13,338
                   212           ?SYMB   'RECT',327,13,339
                   213           ?SYMB   'HGDIOBJ',273,13,340
                   214           ?SYMB   'HPEN__',0,40,341
                   215           ?SYMB   'unused',0,23,16
                   216           ?SYMB   '',16,18,0
                   217           ?SYMB   '',01a0155H,38,343
                   218           ?SYMB   'HPEN',343,13,344
                   219           ?SYMB   'POINT',331,13,345
                   220           ?SYMB   'tagLOGPEN',0,40,346
                   221           ?SYMB   'lopnStyle',0,23,267
                   222           ?SYMB   'lopnWidth',16,23,345
                   223           ?SYMB   'lopnColor',80,23,319
                   224           ?SYMB   '',112,18,0
                   225           ?SYMB   'LOGPEN',346,13,347
                   226           ?SYMB   'HBRUSH__',0,40,348
                   227           ?SYMB   'unused',0,23,16
                   228           ?SYMB   '',16,18,0
                   229           ?SYMB   '',01a015cH,38,350
                   230           ?SYMB   'HBRUSH',350,13,351
                   231           ?SYMB   'tagLOGBRUSH',0,40,352
                   232           ?SYMB   'lbStyle',0,23,267
                   233           ?SYMB   'lbColor',16,23,319
                   234           ?SYMB   'lbHatch',48,23,287
                   235           ?SYMB   '',80,18,0
                   236           ?SYMB   'LOGBRUSH',352,13,353
                   237           ?SYMB   'PATTERN',353,13,354
                   238           ?SYMB   'HBITMAP__',0,40,355
                   239           ?SYMB   'unused',0,23,16
                   240           ?SYMB   '',16,18,0
                   241           ?SYMB   '',01a0163H,38,357
                   242           ?SYMB   'HBITMAP',357,13,358
                   243           ?SYMB   'HRGN__',0,40,359
                   244           ?SYMB   'unused',0,23,16
                   245           ?SYMB   '',16,18,0
                   246           ?SYMB   '',01a0167H,38,361
                   247           ?SYMB   'HRGN',361,13,362
                   248           ?SYMB   'HFONT__',0,40,363
                   249           ?SYMB   'unused',0,23,16
                   250           ?SYMB   '',16,18,0
                   251           ?SYMB   '',01a016bH,38,365
                   252           ?SYMB   'HFONT',365,13,366
                   253           ?SYMB   'tagLOGFONT',0,40,367
                   254           ?SYMB   'lfHeight',0,23,287
                   255           ?SYMB   'lfWidth',32,23,287
                   256           ?SYMB   'lfEscapement',64,23,287
                   257           ?SYMB   'lfOrientation',96,23,287
                   258           ?SYMB   'lfWeight',128,23,287
                   259           ?SYMB   'lfItalic',160,23,263
                   260           ?SYMB   'lfUnderline',168,23,263
                   261           ?SYMB   'lfStrikeOut',176,23,263
                   262           ?SYMB   'lfCharSet',184,23,263
                   263           ?SYMB   'lfOutPrecision',192,23,263
                   264           ?SYMB   'lfClipPrecision',200,23,263
                   265           ?SYMB   'lfQuality',208,23,263
                   266           ?SYMB   'lfPitchAndFamily',216,23,263
                   267           ?SYMB   'lfFaceName',224,23,297
                   268           ?SYMB   '',480,18,0
                   269           ?SYMB   'LOGFONT',367,13,368
                   270           ?SYMB   'tagTEXTMETRIC',0,40,369
                   271           ?SYMB   'tmHeight',0,23,287
                   272           ?SYMB   'tmAscent',32,23,287
                   273           ?SYMB   'tmDescent',64,23,287
                   274           ?SYMB   'tmInternalLeading',96,23,287
                   275           ?SYMB   'tmExternalLeading',128,23,287
                   276           ?SYMB   'tmAveCharWidth',160,23,287
                   277           ?SYMB   'tmMaxCharWidth',192,23,287
                   278           ?SYMB   'tmWeight',224,23,287
                   279           ?SYMB   'tmOverhang',256,23,287
                   280           ?SYMB   'tmDigitizedAspectX',288,23,287
                   281           ?SYMB   'tmDigitizedAspectY',320,23,287
                   282           ?SYMB   'tmFirstChar',352,23,263
                   283           ?SYMB   'tmLastChar',360,23,263
                   284           ?SYMB   'tmDefaultChar',368,23,263
                   285           ?SYMB   'tmBreakChar',376,23,263
                   286           ?SYMB   'tmItalic',384,23,263
                   287           ?SYMB   'tmUnderlined',392,23,263
                   288           ?SYMB   'tmStruckOut',400,23,263
                   289           ?SYMB   'tmPitchAndFamily',408,23,263
                   290           ?SYMB   'tmCharSet',416,23,263
                   291           ?SYMB   '',432,18,0
                   292           ?SYMB   '',01a0171H,38,371
                   293           ?SYMB   'PTEXTMETRIC',371,13,372
                   294           ?SYMB   'tagBITMAPINFOHEADER',0,40,373
                   295           ?SYMB   'biSize',0,23,268
                   296           ?SYMB   'biWidth',32,23,287
                   297           ?SYMB   'biHeight',64,23,287
                   298           ?SYMB   'biPlanes',96,23,264
                   299           ?SYMB   'biBitCount',112,23,264
                   300           ?SYMB   'biCompression',128,23,268
                   301           ?SYMB   'biSizeImage',160,23,268
                   302           ?SYMB   'biXPelsPerMeter',192,23,287
                   303           ?SYMB   'biYPelsPerMeter',224,23,287
                   304           ?SYMB   'biClrUsed',256,23,268
                   305           ?SYMB   'biClrImportant',288,23,268
                   306           ?SYMB   '',320,18,0
                   307           ?SYMB   'BITMAPINFOHEADER',373,13,374
                   308           ?SYMB   'tagRGBQUAD',0,40,375
                   309           ?SYMB   'rgbBlue',0,23,263
                   310           ?SYMB   'rgbGreen',8,23,263
                   311           ?SYMB   'rgbRed',16,23,263
                   312           ?SYMB   'rgbReserved',24,23,263
                   313           ?SYMB   '',32,18,0
                   314           ?SYMB   'RGBQUAD',375,13,376
                   315           ?SYMB   'tagBITMAPCOREHEADER',0,40,377
                   316           ?SYMB   'bcSize',0,23,268
                   317           ?SYMB   'bcWidth',32,23,4
                   318           ?SYMB   'bcHeight',48,23,4
                   319           ?SYMB   'bcPlanes',64,23,264
                   320           ?SYMB   'bcBitCount',80,23,264
                   321           ?SYMB   '',96,18,0
                   322           ?SYMB   'BITMAPCOREHEADER',377,13,378
                   323           ?SYMB   'tagRGBTRIPLE',0,40,379
                   324           ?SYMB   'rgbtBlue',0,23,263
                   325           ?SYMB   'rgbtGreen',8,23,263
                   326           ?SYMB   'rgbtRed',16,23,263
                   327           ?SYMB   '',32,18,0
                   328           ?SYMB   'RGBTRIPLE',379,13,380
                   329           ?SYMB   'tagBITMAP',0,40,381
                   330           ?SYMB   'bmType',0,23,287
                   331           ?SYMB   'bmWidth',32,23,287
                   332           ?SYMB   'bmHeight',64,23,287
                   333           ?SYMB   'bmWidthBytes',96,23,287
                   334           ?SYMB   'bmPlanes',128,23,264
                   335           ?SYMB   'bmBitsPixel',144,23,264
                   336           ?SYMB   'bmBits',160,23,273
                   337           ?SYMB   '',192,18,0
                   338           ?SYMB   'BITMAP',381,13,382
                   339           ?SYMB   '',01800178H,5,383
                   340           ?SYMB   '',16,47,384
                   341           ?SYMB   '',0,30,0
                   342           ?SYMB   '',0,49,0
                   343           ?SYMB   'tagBITMAPINFO',0,40,385
                   344           ?SYMB   'bmiHeader',0,23,374
                   345           ?SYMB   'bmiColors',320,23,383
                   346           ?SYMB   '',352,18,0
                   347           ?SYMB   'BITMAPINFO',385,13,386
                   348           ?SYMB   'PVOID',273,13,387
                   349           ?SYMB   '',01a0181H,38,389
                   350           ?SYMB   'PBITMAPINFO',389,13,390
                   351           ?SYMB   'HICON__',0,40,391
                   352           ?SYMB   'unused',0,23,16
                   353           ?SYMB   '',16,18,0
                   354           ?SYMB   '',01a0187H,38,393
                   355           ?SYMB   'HICON',393,13,394
                   356           ?SYMB   'HWND__',0,40,395
                   357           ?SYMB   'unused',0,23,16
                   358           ?SYMB   '',16,18,0
                   359           ?SYMB   '',01a018bH,38,397
                   360           ?SYMB   'HWND',397,13,398
                   361           ?SYMB   'WPARAM',287,13,399
                   362           ?SYMB   'LPARAM',287,13,400
                   363           ?SYMB   'tagMSG',0,40,401
                   364           ?SYMB   'hwnd',0,23,398
                   365           ?SYMB   'message',32,23,267
                   366           ?SYMB   'wParam',48,23,399
                   367           ?SYMB   'lParam',80,23,400
                   368           ?SYMB   '',112,18,0
                   369           ?SYMB   '',01a0191H,38,403
                   370           ?SYMB   'PMSG',403,13,404
                   371           ?SYMB   'LRESULT',287,13,405
                   372           ?SYMB   'MSG',401,13,406
                   373           ?SYMB   '',405,55,407
                   374           ?SYMB   '',0a0197H,38,409
                   375           ?SYMB   'WNDPROC',409,13,410
                   376           ?SYMB   'HCURSOR',394,13,411
                   377           ?SYMB   'tagWNDCLASS',0,40,412
                   378           ?SYMB   'style',0,23,267
                   379           ?SYMB   'lpfnWndProc',16,23,410
                   380           ?SYMB   'cbClsExtra',48,23,16
                   381           ?SYMB   'cbWndExtra',64,23,16
                   382           ?SYMB   'hInstance',80,23,291
                   383           ?SYMB   'hIcon',112,23,394
                   384           ?SYMB   'hCursor',144,23,411
                   385           ?SYMB   'hbrBackground',176,23,351
                   386           ?SYMB   'lpszMenuName',208,23,311
                   387           ?SYMB   'lpszClassName',240,23,311
                   388           ?SYMB   '',272,18,0
                   389           ?SYMB   'WNDCLASS',412,13,413
                   390           ?SYMB   'tagWNDCLASSEX',0,40,414
                   391           ?SYMB   'cbSize',0,23,267
                   392           ?SYMB   'style',16,23,267
                   393           ?SYMB   'lpfnWndProc',32,23,410
                   394           ?SYMB   'cbClsExtra',64,23,16
                   395           ?SYMB   'cbWndExtra',80,23,16
                   396           ?SYMB   'hInstance',96,23,291
                   397           ?SYMB   'hIcon',128,23,394
                   398           ?SYMB   'hCursor',160,23,411
                   399           ?SYMB   'hbrBackground',192,23,351
                   400           ?SYMB   'lpszMenuName',224,23,311
                   401           ?SYMB   'lpszClassName',256,23,311
                   402           ?SYMB   'hIconSm',288,23,394
                   403           ?SYMB   '',320,18,0
                   404           ?SYMB   'WNDCLASSEX',414,13,415
                   405           ?SYMB   '',01a019cH,38,417
                   406           ?SYMB   'PWNDCLASS',417,13,418
                   407           ?SYMB   'HMENU__',0,40,419
                   408           ?SYMB   'unused',0,23,16
                   409           ?SYMB   '',16,18,0
                   410           ?SYMB   '',01a01a3H,38,421
                   411           ?SYMB   'HMENU',421,13,422
                   412           ?SYMB   '',262,55,423
                   413           ?SYMB   '',0a01a7H,38,425
                   414           ?SYMB   'WNDENUMPROC',425,13,426
                   415           ?SYMB   'tagPAINTSTRUCT',0,40,427
                   416           ?SYMB   'hdc',0,23,324
                   417           ?SYMB   'fErase',32,23,262
                   418           ?SYMB   'rcPaint',48,23,339
                   419           ?SYMB   '',176,18,0
                   420           ?SYMB   '',01a01abH,38,429
                   421           ?SYMB   'PPAINTSTRUCT',429,13,430
                   422           ?SYMB   'PAINTSTRUCT',427,13,431
                   423           ?SYMB   'tagWINDOWPOS',0,40,432
                   424           ?SYMB   'hwnd',0,23,398
                   425           ?SYMB   'hwndInsertAfter',32,23,398
                   426           ?SYMB   'x',64,23,16
                   427           ?SYMB   'y',80,23,16
                   428           ?SYMB   'cx',96,23,16
                   429           ?SYMB   'cy',112,23,16
                   430           ?SYMB   'flags',128,23,267
                   431           ?SYMB   '',144,18,0
                   432           ?SYMB   '',01a01b0H,38,434
                   433           ?SYMB   'PWINDOWPOS',434,13,435
                   434           ?SYMB   './include\virtkey.h',0,29,3
                   435           ?SYMB   '',0,86,3
                   436           ?SYMB   '',0,86,2
                   437           ?SYMB   '',01a0107H,38,437
                   438           ?SYMB   'PBYTE',437,13,438
                   439           ?SYMB   '',01a0108H,38,440
                   440           ?SYMB   'LPWORD',440,13,441
                   441           ?SYMB   '',1,55,442
                   442           ?SYMB   '',0a01baH,38,444
                   443           ?SYMB   'TIMERPROC',444,13,445
                   444           ?SYMB   'MENUITEMTEMPLATE',446,13,447
                   445           ?SYMB   '',01a01bfH,38,449
                   446           ?SYMB   'PMENUITEMTEMPLATE',449,13,450
                   447           ?SYMB   'tagMENUITEMTEMPLATE',0,40,446
                   448           ?SYMB   'wFlags',0,23,264
                   449           ?SYMB   'wID',16,23,264
                   450           ?SYMB   'lpszItemName',32,23,304
                   451           ?SYMB   'pMenuItems',64,23,450
                   452           ?SYMB   '',96,18,0
                   453           ?SYMB   'T$5',0,40,451
                   454           ?SYMB   'version',0,23,268
                   455           ?SYMB   'pMenuItems',32,23,450
                   456           ?SYMB   '',64,18,0
                   457           ?SYMB   'MENUTEMPLATE',451,13,452
                   458           ?SYMB   'tagSCROLLINFO',0,40,453
                   459           ?SYMB   'cbSize',0,23,267
                   460           ?SYMB   'fMask',16,23,267
                   461           ?SYMB   'nMin',32,23,16
                   462           ?SYMB   'nMax',48,23,16
                   463           ?SYMB   'nPage',64,23,267
                   464           ?SYMB   'nPos',80,23,16
                   465           ?SYMB   'nTrackPos',96,23,16
                   466           ?SYMB   '',112,18,0
                   467           ?SYMB   'SCROLLINFO',453,13,454
                   468           ?SYMB   '',01a01c6H,38,456
                   469           ?SYMB   'PCSCROLLINFO',456,13,457
                   470           ?SYMB   '',01a01c5H,38,459
                   471           ?SYMB   'PSCROLLINFO',459,13,460
                   472           ?SYMB   'T$6',0,40,461
                   473           ?SYMB   'style',0,23,268
                   474           ?SYMB   'dwExStyle',32,23,268
                   475           ?SYMB   'x',64,23,4
                   476           ?SYMB   'y',80,23,4
                   477           ?SYMB   'cx',96,23,4
                   478           ?SYMB   'cy',112,23,4
                   479           ?SYMB   'id',128,23,268
                   480           ?SYMB   'lpszClassName',160,23,304
                   481           ?SYMB   'lpszWindowText',192,23,304
                   482           ?SYMB   '',224,18,0
                   483           ?SYMB   'DLGITEMTEMPLATE',461,13,462
                   484           ?SYMB   '',01d001ceH,5,463
                   485           ?SYMB   '',16,47,464
                   486           ?SYMB   '',0,30,0
                   487           ?SYMB   '',0,49,0
                   488           ?SYMB   'T$7',0,40,465
                   489           ?SYMB   'type',0,23,268
                   490           ?SYMB   'style',32,23,268
                   491           ?SYMB   'dwExStyle',64,23,268
                   492           ?SYMB   'cdit',96,23,268
                   493           ?SYMB   'x',128,23,4
                   494           ?SYMB   'y',144,23,4
                   495           ?SYMB   'cx',160,23,4
                   496           ?SYMB   'cy',176,23,4
                   497           ?SYMB   'lpszMenuName',192,23,304
                   498           ?SYMB   'lpszClassName',224,23,304
                   499           ?SYMB   'lpszWindowText',256,23,304
                   500           ?SYMB   'dlgItems',288,23,463
                   501           ?SYMB   '',512,18,0
                   502           ?SYMB   'DLGTEMPLATE',465,13,466
                   503           ?SYMB   '',262,55,467
                   504           ?SYMB   '',0a01d3H,38,469
                   505           ?SYMB   'DLGPROC',469,13,470
                   506           ?SYMB   '',01a01d2H,38,472
                   507           ?SYMB   'PCDLGTEMPLATE',472,13,473
                   508           ?SYMB   'tagDRAWITEMSTRUCT',0,40,474
                   509           ?SYMB   'CtlType',0,23,267
                   510           ?SYMB   'CtlID',16,23,267
                   511           ?SYMB   'itemID',32,23,267
                   512           ?SYMB   'itemAction',48,23,267
                   513           ?SYMB   'itemState',64,23,267
                   514           ?SYMB   'hwndItem',80,23,398
                   515           ?SYMB   'hDC',112,23,324
                   516           ?SYMB   'rcItem',144,23,339
                   517           ?SYMB   'itemData',272,23,268
                   518           ?SYMB   '',304,18,0
                   519           ?SYMB   'DRAWITEMSTRUCT',474,13,475
                   520           ?SYMB   'tagMEASUREITEMSTRUCT',0,40,476
                   521           ?SYMB   'CtlType',0,23,267
                   522           ?SYMB   'CtlID',16,23,267
                   523           ?SYMB   'itemID',32,23,267
                   524           ?SYMB   'itemWidth',48,23,267
                   525           ?SYMB   'itemHeight',64,23,267
                   526           ?SYMB   'itemData',80,23,268
                   527           ?SYMB   '',112,18,0
                   528           ?SYMB   'MEASUREITEMSTRUCT',476,13,477
                   529           ?SYMB   'tagDELETEITEMSTRUCT',0,40,478
                   530           ?SYMB   'CtlType',0,23,267
                   531           ?SYMB   'CtlID',16,23,267
                   532           ?SYMB   'itemID',32,23,267
                   533           ?SYMB   'hwndItem',48,23,398
                   534           ?SYMB   'itemData',80,23,268
                   535           ?SYMB   '',112,18,0
                   536           ?SYMB   'DELETEITEMSTRUCT',478,13,479
                   537           ?SYMB   'tagCOMPAREITEMSTRUCT',0,40,480
                   538           ?SYMB   'CtlType',0,23,267
                   539           ?SYMB   'CtlID',16,23,267
                   540           ?SYMB   'hwndItem',32,23,398
                   541           ?SYMB   'itemID1',64,23,267
                   542           ?SYMB   'itemData1',80,23,268
                   543           ?SYMB   'itemID2',112,23,267
                   544           ?SYMB   'itemData2',128,23,268
                   545           ?SYMB   '',160,18,0
                   546           ?SYMB   'COMPAREITEMSTRUCT',480,13,481
                   547           ?SYMB   '',405,55,482
                   548           ?SYMB   '',0a01e2H,38,484
                   549           ?SYMB   'HOOKPROC',484,13,485
                   550           ?SYMB   'HHOOK__',0,40,486
                   551           ?SYMB   'unused',0,23,16
                   552           ?SYMB   '',16,18,0
                   553           ?SYMB   '',01a01e6H,38,488
                   554           ?SYMB   'HHOOK',488,13,489
                   555           ?SYMB   '',01eb0107H,5,490
                   556           ?SYMB   '',16,47,491
                   557           ?SYMB   '',0,30,0
                   558           ?SYMB   '',31,49,0
                   559           ?SYMB   '_devicemode',0,40,492
                   560           ?SYMB   'dmDeviceName',0,23,490
                   561           ?SYMB   'dmSpecVersion',256,23,264
                   562           ?SYMB   'dmDriverVersion',272,23,264
                   563           ?SYMB   'dmSize',288,23,264
                   564           ?SYMB   'dmDriverExtra',304,23,264
                   565           ?SYMB   'dmFields',320,23,268
                   566           ?SYMB   'dmOrientation',352,23,4
                   567           ?SYMB   'dmPaperSize',368,23,4
                   568           ?SYMB   'dmPaperLength',384,23,4
                   569           ?SYMB   'dmPaperWidth',400,23,4
                   570           ?SYMB   'dmScale',416,23,4
                   571           ?SYMB   'dmCopies',432,23,4
                   572           ?SYMB   'dmDefaultSource',448,23,4
                   573           ?SYMB   'dmPrintQuality',464,23,4
                   574           ?SYMB   'dmColor',480,23,4
                   575           ?SYMB   'dmDuplex',496,23,4
                   576           ?SYMB   'dmYResolution',512,23,4
                   577           ?SYMB   'dmTTOption',528,23,4
                   578           ?SYMB   'dmCollate',544,23,4
                   579           ?SYMB   'dmFormName',560,23,490
                   580           ?SYMB   'dmLogPixels',816,23,264
                   581           ?SYMB   'dmBitsPerPel',832,23,268
                   582           ?SYMB   'dmPelsWidth',864,23,268
                   583           ?SYMB   'dmPelsHeight',896,23,268
                   584           ?SYMB   'dmDisplayFlags',928,23,268
                   585           ?SYMB   'dmDisplayFrequency',960,23,268
                   586           ?SYMB   'dmICMMethod',992,23,268
                   587           ?SYMB   'dmICMIntent',1024,23,268
                   588           ?SYMB   'dmMediaType',1056,23,268
                   589           ?SYMB   'dmDitherType',1088,23,268
                   590           ?SYMB   'dmICCManufacturer',1120,23,268
                   591           ?SYMB   'dmICCModel',1152,23,268
                   592           ?SYMB   'dmPanningWidth',1184,23,268
                   593           ?SYMB   'dmPanningHeight',1216,23,268
                   594           ?SYMB   '',1248,18,0
                   595           ?SYMB   '',01a01ecH,38,494
                   596           ?SYMB   'PDEVMODE',494,13,495
                   597           ?SYMB   '',0,86,1
                   598   ; me_init.c   21        #include "me_func.h"
                   599           ?SYMB   'me_func.h',0,29,2
                   600           ?SYMB   '',0,86,2
                   601           ?SYMB   '',1,55,496
                   602           ?SYMB   '',0a01f0H,38,498
                   603           ?SYMB   'ME_ReqCallback',498,13,499
                   604           ?SYMB   '',1,55,500
                   605           ?SYMB   '',0a01f4H,38,502
                   606           ?SYMB   'ME_IndCallback',502,13,503
                   607           ?SYMB   '',0,86,1
                   608   ; me_init.c   22        #include "me_at.h"
                   609           ?SYMB   'me_at.h',0,29,2
                   610           ?SYMB   '',0,86,2
                   611           ?SYMB   '',1,55,504
                   612           ?SYMB   '',0a01f8H,38,506
                   613           ?SYMB   'MAT_Indication',506,13,507
                   614           ?SYMB   '',0,86,1
                   615   ; me_init.c   23        #include "me_wnd.h"
                   616           ?SYMB   './include\me_wnd.h',0,29,2
                   617           ?SYMB   '',0,86,2
                   618           ?SYMB   './include\hp_modcfg.h',0,29,3
                   619           ?SYMB   '',0,86,3
                   620           ?SYMB   '',0,86,2
                   621           ?SYMB   '',01fd0002H,5,508
                   622           ?SYMB   '',16,47,509
                   623           ?SYMB   '',0,30,0
                   624           ?SYMB   '',23,49,0
                   625           ?SYMB   'tagCALL_FWD',0,40,510
                   626           ?SYMB   'Reason',0,23,16
                   627           ?SYMB   'bEnable',16,23,262
                   628           ?SYMB   'PhoneNum',32,23,508
                   629           ?SYMB   'Class',224,23,16
                   630           ?SYMB   'Time',240,23,16
                   631           ?SYMB   '',256,18,0
                   632           ?SYMB   '',01a01feH,38,512
                   633           ?SYMB   'PCALL_FWD',512,13,513
                   634           ?SYMB   '',02030002H,5,514
                   635           ?SYMB   '',16,47,515
                   636           ?SYMB   '',0,30,0
                   637           ?SYMB   '',163,49,0
                   638           ?SYMB   'tagSMS_Send',0,40,516
                   639           ?SYMB   'SCA',0,23,508
                   640           ?SYMB   'Type',192,23,16
                   641           ?SYMB   'ConLen',208,23,16
                   642           ?SYMB   'Report',224,23,262
                   643           ?SYMB   'ReplyPath',240,23,262
                   644           ?SYMB   'PID',256,23,16
                   645           ?SYMB   'VPvalue',272,23,16
                   646           ?SYMB   'PhoneNum',288,23,508
                   647           ?SYMB   'Context',480,23,514
                   648           ?SYMB   '',1792,18,0
                   649           ?SYMB   '',01a0204H,38,518
                   650           ?SYMB   'PSMS_SEND',518,13,519
                   651           ?SYMB   'tagIND_STATUS',0,40,520
                   652           ?SYMB   'Mt',0,23,16
                   653           ?SYMB   'Bm',16,23,16
                   654           ?SYMB   'Ds',32,23,16
                   655           ?SYMB   '',48,18,0
                   656           ?SYMB   '',01a0208H,38,522
                   657           ?SYMB   'PIND_STATUS',522,13,523
                   658           ?SYMB   '',020d0002H,5,524
                   659           ?SYMB   '',16,47,525
                   660           ?SYMB   '',0,30,0
                   661           ?SYMB   '',39,49,0
                   662           ?SYMB   '',020f0002H,5,526
                   663           ?SYMB   '',16,47,527
                   664           ?SYMB   '',0,30,0
                   665           ?SYMB   '',19,49,0
                   666           ?SYMB   'tagCELL_BROADCAST',0,40,528
                   667           ?SYMB   'mode',0,23,262
                   668           ?SYMB   'ids',16,23,524
                   669           ?SYMB   'code',336,23,526
                   670           ?SYMB   '',496,18,0
                   671           ?SYMB   '',01a0210H,38,530
                   672           ?SYMB   'PCELL_BROADCAST',530,13,531
                   673           ?SYMB   '',02150002H,5,532
                   674           ?SYMB   '',16,47,533
                   675           ?SYMB   '',0,30,0
                   676           ?SYMB   '',15,49,0
                   677           ?SYMB   'tagPHONEBOOK',0,40,534
                   678           ?SYMB   'Index',0,23,16
                   679           ?SYMB   'PhoneNum',16,23,508
                   680           ?SYMB   'Text',208,23,532
                   681           ?SYMB   '',336,18,0
                   682           ?SYMB   '',01a0216H,38,536
                   683           ?SYMB   'PPHONEBOOK',536,13,537
                   684           ?SYMB   '',021b0002H,5,538
                   685           ?SYMB   '',16,47,539
                   686           ?SYMB   '',0,30,0
                   687           ?SYMB   '',63,49,0
                   688           ?SYMB   'tagSTK_PARAM',0,40,540
                   689           ?SYMB   'cmd',0,23,538
                   690           ?SYMB   'timeout',512,23,16
                   691           ?SYMB   'line_count',528,23,16
                   692           ?SYMB   'line_len',544,23,16
                   693           ?SYMB   'revbuf',560,23,273
                   694           ?SYMB   '',592,18,0
                   695           ?SYMB   'STK_PARAM',540,13,541
                   696           ?SYMB   '',0,86,1
                   697   ; me_init.c   24        
                   698   ; me_init.c   25        
                   699   ; me_init.c   26        //------------------MEInit Public Define----------------------
                   700   ; me_init.c   27        
                   701   ; me_init.c   28        
                   702   ; me_init.c   29        int Me_Fsm_Init( int event, int param, char * data, int datalen );
                   703           ?SYMB   'tag_ME_Init_GetValue',0,40,542
                   704           ?SYMB   'CREG',0,23,263
                   705           ?SYMB   'CGREG',8,23,263
                   706           ?SYMB   'COPS_Numeric',16,23,532
                   707           ?SYMB   '',144,18,0
                   708           ?SYMB   '',01a021eH,38,544
                   709           ?SYMB   'PME_INIT_GETVALUE',544,13,545
                   710   ; me_init.c   30        int Me_GetInitValue( PME_INIT_GETVALUE pMeValue );
                   711   ; me_init.c   31        extern void GetResultLength( struct ME_REQUEST* pRequest );
                   712   ; me_init.c   32        
                   713   ; me_init.c   33        //---------- Extern Variable and Function -------------
                   714   ; me_init.c   34        
                   715   ; me_init.c   35        extern  struct  ME_REQUEST *    request_head;
                   716   ; me_init.c   36        extern  struct  ME_FSM  me_fsm_data;
                   717   ; me_init.c   37        extern  UINT    TimerId;
                   718   ; me_init.c   38        extern  UINT    WINAPI ME_TimerProc( HWND, UINT, UINT, DWORD );
                   719   ; me_init.c   39        
                   720   ; me_init.c   40        
                   721   ; me_init.c   41        
                   722   ; me_init.c   42        //--------------- Init ATCmd String of Every Stadge ----------------
                   723   ; me_init.c   43        
                   724   ; me_init.c   44        // Control by bWaveSetFlag, only once
                   725   ; me_init.c   45        char    WAT_INITSTRING_0[][50] = {
                   726   ME_INIT_IR_NB   SECTION DATA WORD PUBLIC 'CINITROM'
0000               727   ME_INIT_IR_NB_ENTRY     LABEL   BYTE
0000 41540D00      728           DB      041h,054h,0Dh,00h,00h
0004 00          
0005 00000000      729           DB      00h,00h,00h,00h,00h
0009 00          
000A 00000000      730           DB      00h,00h,00h,00h,00h
000E 00          
000F 00000000      731           DB      00h,00h,00h,00h,00h
0013 00          
0014 00000000      732           DB      00h,00h,00h,00h,00h
0018 00          
0019 00000000      733           DB      00h,00h,00h,00h,00h
001D 00          
001E 00000000      734           DB      00h,00h,00h,00h,00h
0022 00          
0023 00000000      735           DB      00h,00h,00h,00h,00h
0027 00          
0028 00000000      736           DB      00h,00h,00h,00h,00h
002C 00          
002D 00000000      737           DB      00h,00h,00h,00h,00h
0031 00          
0032 41542B43      738           DB      041h,054h,02Bh,043h,050h
0036 50          
0037 41530D00      739           DB      041h,053h,0Dh,00h,00h
003B 00          
003C 00000000      740           DB      00h,00h,00h,00h,00h
0040 00          
0041 00000000      741           DB      00h,00h,00h,00h,00h
0045 00          
0046 00000000      742           DB      00h,00h,00h,00h,00h
004A 00          
004B 00000000      743           DB      00h,00h,00h,00h,00h
004F 00          
0050 00000000      744           DB      00h,00h,00h,00h,00h
0054 00          
0055 00000000      745           DB      00h,00h,00h,00h,00h
0059 00          
005A 00000000      746           DB      00h,00h,00h,00h,00h
005E 00          
005F 00000000      747           DB      00h,00h,00h,00h,00h
0063 00          
0064 41545E53      748           DB      041h,054h,05Eh,053h,043h
0068 43          
0069 4B533F0D      749           DB      04Bh,053h,03Fh,0Dh,00h
006D 00          
006E 00000000      750           DB      00h,00h,00h,00h,00h
0072 00          
0073 00000000      751           DB      00h,00h,00h,00h,00h
0077 00          
0078 00000000      752           DB      00h,00h,00h,00h,00h
007C 00          
007D 00000000      753           DB      00h,00h,00h,00h,00h
0081 00          
0082 00000000      754           DB      00h,00h,00h,00h,00h
0086 00          
0087 00000000      755           DB      00h,00h,00h,00h,00h
008B 00          
008C 00000000      756           DB      00h,00h,00h,00h,00h
0090 00          
0091 00000000      757           DB      00h,00h,00h,00h,00h
0095 00          
0096 00000000      758           DB      00h,00h,00h,00h,00h
009A 00          
009B 00000000      759           DB      00h,00h,00h,00h,00h
009F 00          
00A0 00000000      760           DB      00h,00h,00h,00h,00h
00A4 00          
00A5 00000000      761           DB      00h,00h,00h,00h,00h
00A9 00          
00AA 00000000      762           DB      00h,00h,00h,00h,00h
00AE 00          
00AF 00000000      763           DB      00h,00h,00h,00h,00h
00B3 00          
00B4 00000000      764           DB      00h,00h,00h,00h,00h
00B8 00          
00B9 00000000      765           DB      00h,00h,00h,00h,00h
00BD 00          
00BE 00000000      766           DB      00h,00h,00h,00h,00h
00C2 00          
00C3 00000000      767           DB      00h,00h,00h,00h,00h
00C7 00          
                   768   ME_INIT_IR_NB   ENDS
                   769   
                   770   ME_INIT_ID_NB   SECTION DATA WORD PUBLIC 'CNEAR'
0000               771   ME_INIT_ID_NB_ENTRY     LABEL   BYTE
0000               772   _WAT_INITSTRING_0       LABEL   BYTE
0000               773           DS      200
                   774           PUBLIC  _WAT_INITSTRING_0
                   775           ?SYMB   '',02230002H,5,546
                   776           ?SYMB   '',16,47,547
                   777           ?SYMB   '',0,30,0
                   778           ?SYMB   '',49,49,0
                   779           ?SYMB   '',02250222H,5,548
                   780           ?SYMB   '',16,47,549
                   781           ?SYMB   '',0,30,0
                   782           ?SYMB   '',3,49,0
               R   783           ?SYMB   'WAT_INITSTRING_0',_WAT_INITSTRING_0,22,548
                   784   ; me_init.c   46                "AT\r",
                   785   ; me_init.c   47                "AT+CPAS\r",
                   786   ; me_init.c   48                "AT^SCKS?\r",
                   787   ; me_init.c   49                "",
                   788   ; me_init.c   50        };
                   789   ; me_init.c   51        
                   790   ; me_init.c   52        // Control by bWaveReSetFlag, when &F
                   791   ; me_init.c   53        char    WAT_INITSTRING_1[][50] = {
                   792   ME_INIT_ID_NB   ENDS
                   793   
                   794   ME_INIT_IR_NB   SECTION DATA
00C8 41545C51      795           DB      041h,054h,05Ch,051h,033h
00CC 33          
00CD 45305130      796           DB      045h,030h,051h,030h,056h
00D1 56          
00D2 3158342B      797           DB      031h,058h,034h,02Bh,043h
00D6 43          
00D7 52433D31      798           DB      052h,043h,03Dh,031h,03Bh
00DB 3B          
00DC 2B434C49      799           DB      02Bh,043h,04Ch,049h,050h
00E0 50          
00E1 3D313B2B      800           DB      03Dh,031h,03Bh,02Bh,043h
00E5 43          
00E6 4F50533D      801           DB      04Fh,050h,053h,03Dh,033h
00EA 33          
00EB 2C323B20      802           DB      02Ch,032h,03Bh,020h,02Bh
00EF 2B          
00F0 43524547      803           DB      043h,052h,045h,047h,03Dh
00F4 3D          
00F5 313B0D00      804           DB      031h,03Bh,0Dh,00h,00h
00F9 00          
00FA 41542643      805           DB      041h,054h,026h,043h,031h
00FE 31          
00FF 26443026      806           DB      026h,044h,030h,026h,053h
0103 53          
0104 300D0000      807           DB      030h,0Dh,00h,00h,00h
0108 00          
0109 00000000      808           DB      00h,00h,00h,00h,00h
010D 00          
010E 00000000      809           DB      00h,00h,00h,00h,00h
0112 00          
0113 00000000      810           DB      00h,00h,00h,00h,00h
0117 00          
0118 00000000      811           DB      00h,00h,00h,00h,00h
011C 00          
011D 00000000      812           DB      00h,00h,00h,00h,00h
0121 00          
0122 00000000      813           DB      00h,00h,00h,00h,00h
0126 00          
0127 00000000      814           DB      00h,00h,00h,00h,00h
012B 00          
012C 41542B43      815           DB      041h,054h,02Bh,043h,04Dh
0130 4D          
0131 45453D31      816           DB      045h,045h,03Dh,031h,0Dh
0135 0D          
0136 00000000      817           DB      00h,00h,00h,00h,00h
013A 00          
013B 00000000      818           DB      00h,00h,00h,00h,00h
013F 00          
0140 00000000      819           DB      00h,00h,00h,00h,00h
0144 00          
0145 00000000      820           DB      00h,00h,00h,00h,00h
0149 00          
014A 00000000      821           DB      00h,00h,00h,00h,00h
014E 00          
014F 00000000      822           DB      00h,00h,00h,00h,00h
0153 00          
0154 00000000      823           DB      00h,00h,00h,00h,00h
0158 00          
0159 00000000      824           DB      00h,00h,00h,00h,00h
015D 00          
015E 41542657      825           DB      041h,054h,026h,057h,0Dh
0162 0D          
0163 00000000      826           DB      00h,00h,00h,00h,00h
0167 00          
0168 00000000      827           DB      00h,00h,00h,00h,00h
016C 00          
016D 00000000      828           DB      00h,00h,00h,00h,00h
0171 00          
0172 00000000      829           DB      00h,00h,00h,00h,00h
0176 00          
0177 00000000      830           DB      00h,00h,00h,00h,00h
017B 00          
017C 00000000      831           DB      00h,00h,00h,00h,00h
0180 00          
0181 00000000      832           DB      00h,00h,00h,00h,00h
0185 00          
0186 00000000      833           DB      00h,00h,00h,00h,00h
018A 00          
018B 00000000      834           DB      00h,00h,00h,00h,00h
018F 00          
0190 00000000      835           DB      00h,00h,00h,00h,00h
0194 00          
0195 00000000      836           DB      00h,00h,00h,00h,00h
0199 00          
019A 00000000      837           DB      00h,00h,00h,00h,00h
019E 00          
019F 00000000      838           DB      00h,00h,00h,00h,00h
01A3 00          
01A4 00000000      839           DB      00h,00h,00h,00h,00h
01A8 00          
01A9 00000000      840           DB      00h,00h,00h,00h,00h
01AD 00          
01AE 00000000      841           DB      00h,00h,00h,00h,00h
01B2 00          
01B3 00000000      842           DB      00h,00h,00h,00h,00h
01B7 00          
01B8 00000000      843           DB      00h,00h,00h,00h,00h
01BC 00          
01BD 00000000      844           DB      00h,00h,00h,00h,00h
01C1 00          
                   845   ME_INIT_IR_NB   ENDS
                   846   
                   847   ME_INIT_ID_NB   SECTION DATA
00C8               848   _WAT_INITSTRING_1       LABEL   BYTE
00C8               849           DS      250
                   850           PUBLIC  _WAT_INITSTRING_1
                   851           ?SYMB   '',02270222H,5,550
                   852           ?SYMB   '',16,47,551
                   853           ?SYMB   '',0,30,0
                   854           ?SYMB   '',4,49,0
               R   855           ?SYMB   'WAT_INITSTRING_1',_WAT_INITSTRING_1,22,550
                   856   ; me_init.c   54                "AT\\Q3E0Q0V1X4+CRC=1;+CLIP=1;+COPS=3,2; +CREG=1;\r",
                   857   ; me_init.c   55                "AT&C1&D0&S0\r",
                   858   ; me_init.c   56                "AT+CMEE=1\r",
                   859   ; me_init.c   57                "AT&W\r",
                   860   ; me_init.c   58                "",
                   861   ; me_init.c   59        };
                   862   ; me_init.c   60        
                   863   ; me_init.c   61        
                   864   ; me_init.c   62        // Common At, Init every time
                   865   ; me_init.c   63        char    WAT_INITSTRING_2[][50] = {
                   866   ME_INIT_ID_NB   ENDS
                   867   
                   868   ME_INIT_IR_NB   SECTION DATA
01C2 41542B43      869           DB      041h,054h,02Bh,043h,053h
01C6 53          
01C7 4D533D31      870           DB      04Dh,053h,03Dh,031h,0Dh
01CB 0D          
01CC 00000000      871           DB      00h,00h,00h,00h,00h
01D0 00          
01D1 00000000      872           DB      00h,00h,00h,00h,00h
01D5 00          
01D6 00000000      873           DB      00h,00h,00h,00h,00h
01DA 00          
01DB 00000000      874           DB      00h,00h,00h,00h,00h
01DF 00          
01E0 00000000      875           DB      00h,00h,00h,00h,00h
01E4 00          
01E5 00000000      876           DB      00h,00h,00h,00h,00h
01E9 00          
01EA 00000000      877           DB      00h,00h,00h,00h,00h
01EE 00          
01EF 00000000      878           DB      00h,00h,00h,00h,00h
01F3 00          
01F4 41545E53      879           DB      041h,054h,05Eh,053h,043h
01F8 43          
01F9 544D3D31      880           DB      054h,04Dh,03Dh,031h,0Dh
01FD 0D          
01FE 00000000      881           DB      00h,00h,00h,00h,00h
0202 00          
0203 00000000      882           DB      00h,00h,00h,00h,00h
0207 00          
0208 00000000      883           DB      00h,00h,00h,00h,00h
020C 00          
020D 00000000      884           DB      00h,00h,00h,00h,00h
0211 00          
0212 00000000      885           DB      00h,00h,00h,00h,00h
0216 00          
0217 00000000      886           DB      00h,00h,00h,00h,00h
021B 00          
021C 00000000      887           DB      00h,00h,00h,00h,00h
0220 00          
0221 00000000      888           DB      00h,00h,00h,00h,00h
0225 00          
0226 41542B43      889           DB      041h,054h,02Bh,043h,047h
022A 47          
022B 5245473D      890           DB      052h,045h,047h,03Dh,031h
022F 31          
0230 3B2B4353      891           DB      03Bh,02Bh,043h,053h,043h
0234 43          
0235 533D2255      892           DB      053h,03Dh,022h,055h,043h
0239 43          
023A 5332223B      893           DB      053h,032h,022h,03Bh,02Bh
023E 2B          
023F 4353534E      894           DB      043h,053h,053h,04Eh,020h
0243 20          
0244 3D312C31      895           DB      03Dh,031h,02Ch,031h,0Dh
0248 0D          
0249 00000000      896           DB      00h,00h,00h,00h,00h
024D 00          
024E 00000000      897           DB      00h,00h,00h,00h,00h
0252 00          
0253 00000000      898           DB      00h,00h,00h,00h,00h
0257 00          
0258 41545E53      899           DB      041h,054h,05Eh,053h,053h
025C 53          
025D 54413D31      900           DB      054h,041h,03Dh,031h,02Ch
0261 2C          
0262 310D0000      901           DB      031h,0Dh,00h,00h,00h
0266 00          
0267 00000000      902           DB      00h,00h,00h,00h,00h
026B 00          
026C 00000000      903           DB      00h,00h,00h,00h,00h
0270 00          
0271 00000000      904           DB      00h,00h,00h,00h,00h
0275 00          
0276 00000000      905           DB      00h,00h,00h,00h,00h
027A 00          
027B 00000000      906           DB      00h,00h,00h,00h,00h
027F 00          
0280 00000000      907           DB      00h,00h,00h,00h,00h
0284 00          
0285 00000000      908           DB      00h,00h,00h,00h,00h
0289 00          
028A 41542B43      909           DB      041h,054h,02Bh,043h,04Fh
028E 4F          
028F 50533F3B      910           DB      050h,053h,03Fh,03Bh,02Bh
0293 2B          
0294 43524547      911           DB      043h,052h,045h,047h,03Fh
0298 3F          
0299 3B2B4347      912           DB      03Bh,02Bh,043h,047h,052h
029D 52          
029E 45473F0D      913           DB      045h,047h,03Fh,0Dh,00h
02A2 00          
02A3 00000000      914           DB      00h,00h,00h,00h,00h
02A7 00          
02A8 00000000      915           DB      00h,00h,00h,00h,00h
02AC 00          
02AD 00000000      916           DB      00h,00h,00h,00h,00h
02B1 00          
02B2 00000000      917           DB      00h,00h,00h,00h,00h
02B6 00          
02B7 00000000      918           DB      00h,00h,00h,00h,00h
02BB 00          
02BC 00000000      919           DB      00h,00h,00h,00h,00h
02C0 00          
02C1 00000000      920           DB      00h,00h,00h,00h,00h
02C5 00          
02C6 00000000      921           DB      00h,00h,00h,00h,00h
02CA 00          
02CB 00000000      922           DB      00h,00h,00h,00h,00h
02CF 00          
02D0 00000000      923           DB      00h,00h,00h,00h,00h
02D4 00          
02D5 00000000      924           DB      00h,00h,00h,00h,00h
02D9 00          
02DA 00000000      925           DB      00h,00h,00h,00h,00h
02DE 00          
02DF 00000000      926           DB      00h,00h,00h,00h,00h
02E3 00          
02E4 00000000      927           DB      00h,00h,00h,00h,00h
02E8 00          
02E9 00000000      928           DB      00h,00h,00h,00h,00h
02ED 00          
                   929   ME_INIT_IR_NB   ENDS
                   930   
                   931   ME_INIT_ID_NB   SECTION DATA
01C2               932   _WAT_INITSTRING_2       LABEL   BYTE
01C2               933           DS      300
                   934           PUBLIC  _WAT_INITSTRING_2
                   935           ?SYMB   '',02290222H,5,552
                   936           ?SYMB   '',16,47,553
                   937           ?SYMB   '',0,30,0
                   938           ?SYMB   '',5,49,0
               R   939           ?SYMB   'WAT_INITSTRING_2',_WAT_INITSTRING_2,22,552
                   940   ; me_init.c   64                "AT+CSMS=1\r",
                   941   ; me_init.c   65                "AT^SCTM=1\r",
                   942   ; me_init.c   66                "AT+CGREG=1;+CSCS=\"UCS2\";+CSSN =1,1\r",
                   943   ; me_init.c   67                "AT^SSTA=1,1\r",
                   944   ; me_init.c   68                "AT+COPS?;+CREG?;+CGREG?\r",            // Get query result
                   945   ; me_init.c   69                "",
                   946   ; me_init.c   70        };
                   947   ; me_init.c   71        
                   948   ; me_init.c   72        
                   949   ; me_init.c   73        
                   950   ; me_init.c   74        void * WAT_STRING_GRP[3] = {
                   951   ME_INIT_ID_NB   ENDS
                   952   
                   953   ME_INIT_IR_NB   SECTION DATA
02EE 00000000  R   954           DPPTR   _WAT_INITSTRING_0,_WAT_INITSTRING_1,_WAT_INITSTRING_2
02F2 00000000  R 
02F6 00000000    
                   955   ME_INIT_IR_NB   ENDS
                   956   
                   957   ME_INIT_ID_NB   SECTION DATA
02EE               958   _WAT_STRING_GRP LABEL   WORD
02EE               959           DS      12
                   960           PUBLIC  _WAT_STRING_GRP
                   961           ?SYMB   '',022b0111H,5,554
                   962           ?SYMB   '',16,47,555
                   963           ?SYMB   '',0,30,0
                   964           ?SYMB   '',2,49,0
               R   965           ?SYMB   'WAT_STRING_GRP',_WAT_STRING_GRP,22,554
                   966   ; me_init.c   75                (void*)WAT_INITSTRING_0,
                   967   ; me_init.c   76                (void*)WAT_INITSTRING_1,
                   968   ; me_init.c   77                (void*)WAT_INITSTRING_2,
                   969   ; me_init.c   78        };
                   970   ; me_init.c   79        
                   971   ; me_init.c   80        
                   972   ; me_init.c   81        // AT Command Group
                   973   ; me_init.c   82        char (*WAT_CurCommand)[50];
                   974   ME_INIT_ID_NB   ENDS
                   975   
                   976   ME_INIT_3_FB    SECTION DATA WORD PUBLIC 'CFAR'
0000               977   ME_INIT_3_FB_ENTRY      LABEL   BYTE
0000               978   _WAT_CurCommand LABEL   WORD
0000               979           DS      4
                   980           PUBLIC  _WAT_CurCommand
                   981           ?SYMB   '',01a0222H,38,557
               R   982           ?SYMB   'WAT_CurCommand',_WAT_CurCommand,22,557
                   983   ; me_init.c   83        
                   984   ; me_init.c   84        
                   985   ; me_init.c   85        //---------------- Me Init Define ---------------------
                   986   ; me_init.c   86        
                   987   ; me_init.c   87        #define MEINIT_TIMER_ID                         1
                   988   ; me_init.c   88        #define MEINIT_MAXCOUNT_ERROR           100
                   989   ; me_init.c   89        #define MEINIT_MAXCOUNT_TIMEOUT         100
                   990   ; me_init.c   90        
                   991   ; me_init.c   91        static int ErrorCount, TimeoutCount;
0004               992   _ErrorCount     LABEL   WORD
0004               993           DS      2
               R   994           ?SYMB   'ErrorCount',_ErrorCount,31,16
0006               995   _TimeoutCount   LABEL   WORD
0006               996           DS      2
               R   997           ?SYMB   'TimeoutCount',_TimeoutCount,31,16
                   998   ; me_init.c   92        
                   999   ; me_init.c   93        // Define FSM Step
                  1000   ; me_init.c   94        #define ME_FSMINIT_START                0
                  1001   ; me_init.c   95        #define ME_FSMINIT_WTRSPNS_1    1
                  1002   ; me_init.c   96        #define ME_FSMINIT_WTRSPNS_2    2
                  1003   ; me_init.c   97        #define ME_FSMINIT_WTRSPNS_3    3
                  1004   ; me_init.c   98        #define ME_FSMINIT_WTRSPNS_4    4
                  1005   ; me_init.c   99        #define ME_FSMINIT_WTRSPNS_5    5
                  1006   ; me_init.c  100        #define ME_FSMINIT_COMPLETE             7       // Keep asME_FSM_DONE
                  1007   ; me_init.c  101        
                  1008   ; me_init.c  102        // Define Execute Type
                  1009   ; me_init.c  103        #define ME_EXECUTE_START                0
                  1010   ; me_init.c  104        #define ME_EXECUTE_TEST                 1
                  1011   ; me_init.c  105        #define ME_EXECUTE_COMMAND              2
                  1012   ; me_init.c  106        #define ME_EXECUTE_LAST                 3
                  1013   ; me_init.c  107        #define ME_EXECUTE_GETVALUE             4
                  1014   ; me_init.c  108        #define ME_EXECUTE_STKACTIVE    5
                  1015   ; me_init.c  109        
                  1016   ; me_init.c  110        // Define FSM Execution
                  1017   ; me_init.c  111        //[ request_head->cmd: ME_INIT_WAVE_ ] [ ME_EXECUTE_ ]
                  1018   ; me_init.c  112        
                  1019   ; me_init.c  113        int     Me_InitFsm_ExecTable[3][7] = {
                  1020   ME_INIT_3_FB    ENDS
                  1021   
                  1022   ME_INIT_IR_NB   SECTION DATA
02FA 00000100     1023           DW      00h,01h,01h,04h,00h
02FE 01000400    
0302 0000        
0304 00000000     1024           DW      00h,00h,00h,02h,02h
0308 00000200    
030C 0200        
030E 02000300     1025           DW      02h,03h,00h,00h,00h
0312 00000000    
0316 0000        
0318 02000200     1026           DW      02h,02h,02h,05h,04h
031C 02000500    
0320 0400        
0322 0000         1027           DW      00h
                  1028   ME_INIT_IR_NB   ENDS
                  1029   
                  1030   ME_INIT_ID_NB   SECTION DATA
02FA              1031   _Me_InitFsm_ExecTable   LABEL   WORD
02FA              1032           DS      42
                  1033           PUBLIC  _Me_InitFsm_ExecTable
                  1034           ?SYMB   '',022f0010H,5,558
                  1035           ?SYMB   '',16,47,559
                  1036           ?SYMB   '',0,30,0
                  1037           ?SYMB   '',6,49,0
                  1038           ?SYMB   '',0231022eH,5,560
                  1039           ?SYMB   '',16,47,561
                  1040           ?SYMB   '',0,30,0
                  1041           ?SYMB   '',2,49,0
               R  1042           ?SYMB   'Me_InitFsm_ExecTable',_Me_InitFsm_ExecTable,22,560
                  1043   ; me_init.c  114                0,1,1,4,0,0,0,          //ME_INIT_WAVE_EQUIP_SET
                  1044   ; me_init.c  115                0,2,2,2,3,0,0,          //ME_INIT_WAVE_EQUIP_RESET
                  1045   ; me_init.c  116                0,2,2,2,5,4,0,          //ME_INIT_WAVE_EVERYTIME
                  1046   ; me_init.c  117        };
                  1047   ; me_init.c  118        
                  1048   ; me_init.c  119        
                  1049   ; me_init.c  120        // Function Declare
                  1050   ; me_init.c  121        
                  1051   ; me_init.c  122        int Me_Fsm_Init( int event, int param, char * data, int datalen );
                  1052   ; me_init.c  123        static int Me_Fsm_Init_End( int Error );
                  1053   ; me_init.c  124        static int Me_Fsm_Init_ResetTimer( void );
                  1054   ; me_init.c  125        
                  1055   ; me_init.c  126        int Me_GetInitValue( PME_INIT_GETVALUE pMeValue );
                  1056   ; me_init.c  127        static char * MeInit_Filtrate( const char * SrcStr, int SrcLen );
                  1057   ; me_init.c  128        static int MEInit_AnaCREG( char * Content, BYTE *stat );
                  1058   ; me_init.c  129        static int MEInit_AnaCGREG( char * Content, BYTE *stat );
                  1059   ; me_init.c  130        static int MEInit_AnaCOPS( char * Content, char * COPSNum, int Len );
                  1060   ; me_init.c  131        int ME_Search_String( char *SrcStr, char *DestStr, int DestLen );
                  1061   ; me_init.c  132        int ME_Search_integer( char *SrcStr, BYTE * DestInt, BOOL FirstSearch )
                         ;
                  1062   ; me_init.c  133        int ME_Search_integer_Alpha( char *SrcStr, char * DestInt, int DestLen,
                          BOOL FirstSearch );
                  1063   ; me_init.c  134        
                  1064   ; me_init.c  135        
                  1065   ; me_init.c  136        
                  1066   ; me_init.c  137        /*------------------------------------------------------------------
                  1067   ; me_init.c  138         *
                  1068   ; me_init.c  139         * Me_Fsm_Init
                  1069   ; me_init.c  140         *
                  1070   ; me_init.c  141         *------------------------------------------------------------------*/
                  1071   ; me_init.c  142        
                  1072   ; me_init.c  143        int Me_Fsm_Init ( int event, int param, char * data, int datalen )
                  1073   ; me_init.c  144        {
                  1074   ME_INIT_ID_NB   ENDS
                  1075   
                  1076   ME_INIT_4_PR    SECTION CODE WORD PUBLIC 'CPROGRAM'
                  1077           ?LINE   144
                  1078           PUBLIC  _Me_Fsm_Init
               R  1079           ?SYMB   'Me_Fsm_Init',_Me_Fsm_Init,37,16
                  1080           ?SYMB   '',144,8,34
                  1081   ME_INIT_4_PR    ENDS
                  1082   
                  1083   ME_INIT_IR_NB   SECTION DATA
0324 0000         1084           DW      00h
                  1085   ME_INIT_IR_NB   ENDS
                  1086   
                  1087   ME_INIT_ID_NB   SECTION DATA
0324              1088   _3      LABEL   WORD
0324              1089           DS      2
               R  1090           ?SYMB   'count',_3,31,16
                  1091   ME_INIT_ID_NB   ENDS
                  1092   
                  1093   ME_INIT_IR_NB   SECTION DATA
0326 FFFF         1094           DW      0FFFFh
                  1095   ME_INIT_IR_NB   ENDS
                  1096   
                  1097   ME_INIT_ID_NB   SECTION DATA
0326              1098   _4      LABEL   WORD
0326              1099           DS      2
               R  1100           ?SYMB   'res',_4,31,16
                  1101   ME_INIT_ID_NB   ENDS
                  1102   
                  1103   ME_INIT_4_PR    SECTION CODE
                  1104   _Me_Fsm_Init    PROC    FAR
                  1105           ?SYMB   '',0340H,95,0
                  1106   ME_INIT_4_PR    ENDS
                  1107   
                  1108   ME_INIT_5_CO    SECTION DATA WORD PUBLIC 'CROM'
0000              1109   __swtable213    LABEL   WORD
0000 0000      R  1110           DW      SOF _122
0002 0000      R  1111           DW      SOF _126
0004 0000      R  1112           DW      SOF _137
0006 0000      R  1113           DW      SOF _153
0008 0000      R  1114           DW      SOF _156
000A 0000      R  1115           DW      SOF _143
                  1116   ME_INIT_5_CO    ENDS
                  1117   
                  1118   ME_INIT_4_PR    SECTION CODE
0000 8890         1119           MOV     [-R0],R9
               R  1120           ?SYMB   '',$,96,2
0002 8880         1121           MOV     [-R0],R8
               R  1122           ?SYMB   '',$,96,4
0004 8860         1123           MOV     [-R0],R6
               R  1124           ?SYMB   '',$,96,6
0006 F08D         1125           MOV     R8,R13
0008 F06F         1126           MOV     R6,R15
000A F09E         1127           MOV     R9,R14
                  1128   ; Locals:
                  1129   ; 
                  1130   ; Statics:
                  1131   ;     res = label _4
                  1132   ;     count = label _3
                  1133   ; 
                  1134   ; CSEs:
                  1135   ;     param = R8
                  1136   ;     event = R12
                  1137   ;     data = R9R6
                  1138   ;     datalen = offset 6
                  1139   ; 
                  1140           ?SYMB   'event',4,99,16
                  1141           ?SYMB   'param',3,99,16
                  1142           ?SYMB   'data',2,99,270
                  1143           ?SYMB   'datalen',1,99,16
               R  1144           ?SYMB   'R12',$,100,4
               R  1145           ?SYMB   'R8',$,100,3
               R  1146           ?SYMB   'R9R6',$,100,2
               R  1147           ?SYMB   '0',$,101,1
                  1148   ; me_init.c  145                static int count=0;
                  1149   ; me_init.c  146        
                  1150   ; me_init.c  147                switch( Me_InitFsm_ExecTable[request_head->cmd][me_fsm_data.sta
                         te] )
                  1151           ?LINE   147
000C D7400000  R  1152           EXTP    #PAG _me_fsm_data,#01h
0010 F2FD0000 1R  1153           MOV     R13,POF _me_fsm_data
0014 5C1D         1154           SHL     R13,#01h
0016 D7500000  R  1155           EXTP    #PAG _request_head,#02h
001A F2FE0000 2R  1156           MOV     R14,POF _request_head
001E F2FF0000 1R  1157           MOV     R15,POF (_request_head+2)
0022 DC4F         1158           EXTP    R15,#01h
0024 A81E     1   1159           MOV     R1,[R14]
0026 F021         1160           MOV     R2,R1
0028 5C32         1161           SHL     R2,#03h
002A 2021         1162           SUB     R2,R1
002C 5C12         1163           SHL     R2,#01h
002E 00D2         1164           ADD     R13,R2
0030 D41D0000  R  1165           MOV     R1,[R13+#DPP2:_Me_InitFsm_ExecTable]
0034 4815         1166           CMP     R1,#05h
0036 EAE09E04  R  1167           JMPA    cc_UGT,_212
003A 5C11         1168           SHL     R1,#01h
003C 06F10000  R  1169           ADD     R1,#POF __swtable213
0040 D7400000  R  1170           EXTP    #PAG __swtable213,#01h
0044 A811     1   1171           MOV     R1,[R1]
0046 9C01         1172           JMPI    cc_UC,[R1]
               R  1173           ?SYMB   '',$,102,1
                  1174   ; me_init.c  148                {
                  1175   ; me_init.c  149        
                  1176   ; me_init.c  150                case ME_EXECUTE_START:
                  1177           ?LINE   150
0048              1178   _122:
               R  1179           ?SYMB   '',$,102,3
               R  1180           ?SYMB   '',$,102,2
                  1181   ; me_init.c  151        
                  1182   ; me_init.c  152                        //Reset Timer
                  1183   ; me_init.c  153                        Me_Fsm_Init_ResetTimer();
                  1184           ?LINE   153
0048 F08C         1185           MOV     R8,R12
004A DA00EC04  R  1186           CALLS   SEG _Me_Fsm_Init_ResetTimer,_Me_Fsm_Init_ResetTimer
               R  1187           ?SYMB   '',$,102,4
004E F0C8         1188           MOV     R12,R8
               R  1189           ?SYMB   'R12',$,100,4
                  1190   ; me_init.c  154        
                  1191   ; me_init.c  155                        WAT_CurCommand = WAT_STRING_GRP[request_head->cmd];
                  1192           ?LINE   155
0050 D7500000  R  1193           EXTP    #PAG _request_head,#02h
0054 F2F80000 2R  1194           MOV     R8,POF _request_head
0058 F2F90000 1R  1195           MOV     R9,POF (_request_head+2)
005C DC49         1196           EXTP    R9,#01h
005E A868     1   1197           MOV     R6,[R8]
0060 5C26         1198           SHL     R6,#02h
0062 D4D60000  R  1199           MOV     R13,[R6+#DPP2:_WAT_STRING_GRP]
0066 D4E60000  R  1200           MOV     R14,[R6+#DPP2:_WAT_STRING_GRP+2]
006A E6000000  R  1201           MOV     DPP0,#PAG _WAT_CurCommand
006E F68E0000  R  1202           MOV     _3,ZEROS
0072 F6FD0000  R  1203           MOV     POF _WAT_CurCommand,R13
0076 F6FE0000  R  1204           MOV     POF (_WAT_CurCommand+2),R14
                  1205   ; me_init.c  156                        count = 0;
                  1206   ; me_init.c  157        
                  1207   ; me_init.c  158                        switch( event )
                  1208           ?LINE   158
007A 48C0         1209           CMP     R12,#00h
007C 2D06         1210           JMPR    cc_EQ,_123
007E 48C2         1211           CMP     R12,#02h
0080 2D34         1212           JMPR    cc_EQ,_125
0082 48C3         1213           CMP     R12,#03h
0084 2D32         1214           JMPR    cc_EQ,_125
0086 EA009E04  R  1215           JMPA    cc_UC,_212
                  1216   ; me_init.c  159                        {
                  1217   ; me_init.c  160                        case START:
                  1218           ?LINE   160
008A              1219   _123:
               R  1220           ?SYMB   '',$,102,4
                  1221   ; me_init.c  161                                if( -1 == MAT_Send( 0, WAT_CurCommand[count], s
                         trlen(WAT_CurCommand[count]) ) )
                  1222           ?LINE   161
008A E6000000  R  1223           MOV     DPP0,#PAG _WAT_CurCommand
008E CC00         1224           NOP
0090 F2FC0000  R  1225           MOV     R12,POF _WAT_CurCommand
0094 F2FD0000  R  1226           MOV     R13,POF (_WAT_CurCommand+2)
0098 DA000000  R  1227           CALLS   SEG _strlen,_strlen
009C F0F4         1228           MOV     R15,R4
009E E6000000  R  1229           MOV     DPP0,#PAG _WAT_CurCommand
00A2 E00C         1230           MOV     R12,#00h
00A4 F2FD0000  R  1231           MOV     R13,POF _WAT_CurCommand
00A8 F2FE0000  R  1232           MOV     R14,POF (_WAT_CurCommand+2)
00AC DA000000  R  1233           CALLS   SEG _MAT_Send,_MAT_Send
00B0 46F4FFFF     1234           CMP     R4,#0FFFFh
00B4 EA200204  R  1235           JMPA    cc_EQ,_169
                  1236   ; me_init.c  162                                {
                  1237   ; me_init.c  163                                        Me_Fsm_Init_End( ME_RS_FAILURE );
                  1238   ; me_init.c  164                                        break;
                  1239   ; me_init.c  165                                }
                  1240   ; me_init.c  166        
                  1241   ; me_init.c  167                                TimerId = SetTimer( NULL, MEINIT_TIMER_ID, DFT_
                         TIMEOUT, ME_TimerProc );
                  1242           ?LINE   167
00B8 E6F80000  R  1243           MOV     R8,#SOF _ME_TimerProc
00BC E6F90000  R  1244           MOV     R9,#SEG _ME_TimerProc
00C0 8890         1245           MOV     [-R0],R9
               R  1246           ?SYMB   '',$,96,8
00C2 8880         1247           MOV     [-R0],R8
               R  1248           ?SYMB   '',$,96,10
00C4 E00C         1249           MOV     R12,#00h
00C6 E00D         1250           MOV     R13,#00h
00C8 E01E         1251           MOV     R14,#01h
00CA E6FF401F     1252           MOV     R15,#01F40h
00CE DA000000  R  1253           CALLS   SEG _SetTimer,_SetTimer
00D2 0804         1254           ADD     R0,#04h
               R  1255           ?SYMB   '',$,96,6
                  1256   ; me_init.c  168                                me_fsm_data.state = ME_FSMINIT_WTRSPNS_1;
                  1257           ?LINE   168
00D4 E018         1258           MOV     R8,#01h
                  1259           ?LINE   167
00D6 D7400000  R  1260           EXTP    #PAG _TimerId,#01h
00DA F6F40000 1R  1261           MOV     POF _TimerId,R4
                  1262           ?LINE   168
00DE D7400000  R  1263           EXTP    #PAG _me_fsm_data,#01h
00E2 F6F80000 1R  1264           MOV     POF _me_fsm_data,R8
                  1265   ; me_init.c  169                                break;
                  1266   ; me_init.c  170        
                  1267   ; me_init.c  171                        case DATAIN:
                  1268   ; me_init.c  172                                break;
                  1269           ?LINE   172
00E6 EA009E04  R  1270           JMPA    cc_UC,_212
                  1271   ; me_init.c  173        
                  1272   ; me_init.c  174                        case TIMEOUT:
                  1273   ; me_init.c  175                        case USERSTOP:
                  1274           ?LINE   175
00EA              1275   _125:
                  1276   ; me_init.c  176                                Me_Fsm_Init_End( ME_RS_ERRORSTATUS );
                  1277           ?LINE   176
00EA E08C         1278           MOV     R12,#08h
00EC DA00A804  R  1279           CALLS   SEG _Me_Fsm_Init_End,_Me_Fsm_Init_End
                  1280   ; me_init.c  177                                break;
                  1281   ; me_init.c  178                        }
                  1282   ; me_init.c  179                        break;
                  1283           ?LINE   179
00F0 EA009E04  R  1284           JMPA    cc_UC,_212
                  1285   ; me_init.c  180        
                  1286   ; me_init.c  181                case ME_EXECUTE_TEST:
                  1287           ?LINE   181
00F4              1288   _126:
               R  1289           ?SYMB   'R12',$,100,4
               R  1290           ?SYMB   'R8',$,100,3
                  1291   ; me_init.c  182                        switch( event )
                  1292           ?LINE   182
00F4 48C1         1293           CMP     R12,#01h
00F6 2D08         1294           JMPR    cc_EQ,_127
00F8 48C2         1295           CMP     R12,#02h
00FA EA20E601  R  1296           JMPA    cc_EQ,_135
00FE 48C3         1297           CMP     R12,#03h
0100 EA209804  R  1298           JMPA    cc_EQ,_189
0104 EA009E04  R  1299           JMPA    cc_UC,_212
                  1300   ; me_init.c  183                        {
                  1301   ; me_init.c  184                        case DATAIN:
                  1302           ?LINE   184
0108              1303   _127:
               R  1304           ?SYMB   '',$,102,4
               R  1305           ?SYMB   '',$,102,3
               R  1306           ?SYMB   'R8',$,100,3
                  1307   ; me_init.c  185                                if( param == FRC_OK || param == FRC_ERROR || pa
                         ram == FRC_CMEERROR || param == FRC_CMSERROR )
                  1308           ?LINE   185
0108 4880         1309           CMP     R8,#00h
010A 2D06         1310           JMPR    cc_Z,_130
010C 4881         1311           CMP     R8,#01h
010E 2D04         1312           JMPR    cc_EQ,_130
0110 4882         1313           CMP     R8,#02h
0112 2D02         1314           JMPR    cc_EQ,_130
0114 4883         1315           CMP     R8,#03h
0116 3D08         1316           JMPR    cc_NE,_131
0118              1317   _130:
                  1318   ; me_init.c  186                                        KillTimer(NULL, TimerId);
                  1319           ?LINE   186
0118 E00C         1320           MOV     R12,#00h
011A E00D         1321           MOV     R13,#00h
011C D7400000  R  1322           EXTP    #PAG _TimerId,#01h
0120 F2FE0000 1R  1323           MOV     R14,POF _TimerId
0124 DA000000  R  1324           CALLS   SEG _KillTimer,_KillTimer
0128              1325   _131:
                  1326   ; me_init.c  187        
                  1327   ; me_init.c  188                                if ( param == FRC_OK )
                  1328           ?LINE   188
0128 4880         1329           CMP     R8,#00h
012A EA30BE01  R  1330           JMPA    cc_NZ,_132
                  1331   ; me_init.c  189                                {
                  1332   ; me_init.c  190                                        count++;
                  1333           ?LINE   190
012E 248F0000  R  1334           SUB     _3,ONES
                  1335   ; me_init.c  191                                        if( -1 == MAT_Send( 0, WAT_CurCommand[c
                         ount], strlen(WAT_CurCommand[count]) ) )
                  1336           ?LINE   191
0132 F2F80000  R  1337           MOV     R8,_3
               R  1338           ?SYMB   '',$,102,3
0136 E6F93200     1339           MOV     R9,#032h
013A D110         1340           ATOMIC  #02h
013C 1B89     2   1341           MULU    R8,R9
013E CC00     1   1342           NOP
0140 F2F60EFE     1343           MOV     R6,MDL
0144 E6000000  R  1344           MOV     DPP0,#PAG _WAT_CurCommand
0148 CC00         1345           NOP
014A F2FC0000  R  1346           MOV     R12,POF _WAT_CurCommand
014E F2FD0000  R  1347           MOV     R13,POF (_WAT_CurCommand+2)
0152 00C6         1348           ADD     R12,R6
0154 DA000000  R  1349           CALLS   SEG _strlen,_strlen
0158 F0F4         1350           MOV     R15,R4
015A E00C         1351           MOV     R12,#00h
015C F2F80000  R  1352           MOV     R8,_3
0160 E6F93200     1353           MOV     R9,#032h
0164 D110         1354           ATOMIC  #02h
0166 1B89     2   1355           MULU    R8,R9
0168 CC00     1   1356           NOP
016A F2F60EFE     1357           MOV     R6,MDL
016E E6000000  R  1358           MOV     DPP0,#PAG _WAT_CurCommand
0172 CC00         1359           NOP
0174 F2FD0000  R  1360           MOV     R13,POF _WAT_CurCommand
0178 F2FE0000  R  1361           MOV     R14,POF (_WAT_CurCommand+2)
017C 00D6         1362           ADD     R13,R6
017E DA000000  R  1363           CALLS   SEG _MAT_Send,_MAT_Send
0182 46F4FFFF     1364           CMP     R4,#0FFFFh
0186 EA200204  R  1365           JMPA    cc_EQ,_169
                  1366   ; me_init.c  192                                        {
                  1367   ; me_init.c  193                                                Me_Fsm_Init_End( ME_RS_FAILURE 
                         );
                  1368   ; me_init.c  194                                                break;
                  1369   ; me_init.c  195                                        }
                  1370   ; me_init.c  196        
                  1371   ; me_init.c  197                                        TimerId = SetTimer( NULL, MEINIT_TIMER_
                         ID, DFT_TIMEOUT, ME_TimerProc );
                  1372           ?LINE   197
018A E6F80000  R  1373           MOV     R8,#SOF _ME_TimerProc
018E E6F90000  R  1374           MOV     R9,#SEG _ME_TimerProc
0192 8890         1375           MOV     [-R0],R9
               R  1376           ?SYMB   '',$,96,8
0194 8880         1377           MOV     [-R0],R8
               R  1378           ?SYMB   '',$,96,10
0196 E00C         1379           MOV     R12,#00h
0198 E00D         1380           MOV     R13,#00h
019A E01E         1381           MOV     R14,#01h
019C E6FF401F     1382           MOV     R15,#01F40h
01A0 DA000000  R  1383           CALLS   SEG _SetTimer,_SetTimer
01A4 0804         1384           ADD     R0,#04h
               R  1385           ?SYMB   '',$,96,6
01A6 D7400000  R  1386           EXTP    #PAG _TimerId,#01h
01AA F6F40000 1R  1387           MOV     POF _TimerId,R4
                  1388   ; me_init.c  198        
                  1389   ; me_init.c  199                                        me_fsm_data.state ++;
                  1390           ?LINE   199
01AE D7400000  R  1391           EXTP    #PAG _me_fsm_data,#01h
01B2 248F0000 1R  1392           SUB     POF _me_fsm_data,ONES
                  1393   ; me_init.c  200                                        Me_Fsm_Init_ResetTimer();
                  1394           ?LINE   200
01B6 DA00EC04  R  1395           CALLS   SEG _Me_Fsm_Init_ResetTimer,_Me_Fsm_Init_ResetTimer
                  1396   ; me_init.c  201                                        break;
                  1397           ?LINE   201
01BA EA009E04  R  1398           JMPA    cc_UC,_212
                  1399   ; me_init.c  202                                }
                  1400           ?LINE   202
01BE              1401   _132:
               R  1402           ?SYMB   'R8',$,100,3
                  1403   ; me_init.c  203        
                  1404   ; me_init.c  204                                else if( param == FRC_ERROR || param == FRC_CME
                         ERROR || param == FRC_CMSERROR )        // repeat to send
                  1405           ?LINE   204
01BE 4881         1406           CMP     R8,#01h
01C0 2D05         1407           JMPR    cc_EQ,_134
01C2 4882         1408           CMP     R8,#02h
01C4 2D03         1409           JMPR    cc_EQ,_134
01C6 4883         1410           CMP     R8,#03h
01C8 EA309E04  R  1411           JMPA    cc_NE,_212
01CC              1412   _134:
               R  1413           ?SYMB   '',$,102,3
                  1414   ; me_init.c  205                                {
                  1415   ; me_init.c  206                                        if( ErrorCount >= MEINIT_MAXCOUNT_ERROR
                          )
                  1416           ?LINE   206
01CC E6000000  R  1417           MOV     DPP0,#PAG _ErrorCount
01D0 CC00         1418           NOP
01D2 F2F80000  R  1419           MOV     R8,POF _ErrorCount
01D6 46F86400     1420           CMP     R8,#064h
01DA EAD00204  R  1421           JMPA    cc_SGE,_169
                  1422   ; me_init.c  207                                        {
                  1423   ; me_init.c  208                                                Me_Fsm_Init_End( ME_RS_FAILURE 
                         );
                  1424   ; me_init.c  209                                                break;
                  1425   ; me_init.c  210                                        }
                  1426   ; me_init.c  211        
                  1427   ; me_init.c  212                                        ErrorCount ++;
                  1428           ?LINE   212
01DE 0881         1429           ADD     R8,#01h
01E0 F6F80000  R  1430           MOV     POF _ErrorCount,R8
                  1431   ; me_init.c  213        
                  1432   ; me_init.c  214                                        if( -1 == MAT_Send( 0, WAT_CurCommand[c
                         ount], strlen(WAT_CurCommand[count]) ) )
                  1433           ?LINE   214
01E4 0D0C         1434           JMPR    cc_UC,_136
                  1435   ; me_init.c  215                                        {
                  1436   ; me_init.c  216                                                Me_Fsm_Init_End( ME_RS_FAILURE 
                         );
                  1437   ; me_init.c  217                                                break;
                  1438   ; me_init.c  218                                        }
                  1439   ; me_init.c  219        
                  1440   ; me_init.c  220                                        TimerId = SetTimer( NULL, MEINIT_TIMER_
                         ID, DFT_TIMEOUT, ME_TimerProc );
                  1441   ; me_init.c  221                                        break;
                  1442   ; me_init.c  222                                }
                  1443   ; me_init.c  223                                break;
                  1444   ; me_init.c  224        
                  1445   ; me_init.c  225                        case TIMEOUT:   // repeat to send
                  1446           ?LINE   225
01E6              1447   _135:
                  1448   ; me_init.c  226                                if( TimeoutCount >= MEINIT_MAXCOUNT_TIMEOUT )
                  1449           ?LINE   226
01E6 E6000000  R  1450           MOV     DPP0,#PAG _TimeoutCount
01EA CC00         1451           NOP
01EC F2F80000  R  1452           MOV     R8,POF _TimeoutCount
01F0 46F86400     1453           CMP     R8,#064h
01F4 EAD09004  R  1454           JMPA    cc_SGE,_184
                  1455   ; me_init.c  227                                {
                  1456   ; me_init.c  228                                        Me_Fsm_Init_End( ME_RS_TIMEOUT );
                  1457   ; me_init.c  229                                        break;
                  1458   ; me_init.c  230                                }
                  1459   ; me_init.c  231        
                  1460   ; me_init.c  232                                TimeoutCount ++;
                  1461           ?LINE   232
01F8 0881         1462           ADD     R8,#01h
01FA F6F80000  R  1463           MOV     POF _TimeoutCount,R8
                  1464   ; me_init.c  233        
                  1465   ; me_init.c  234                                if( -1 == MAT_Send( 0, WAT_CurCommand[count], s
                         trlen(WAT_CurCommand[count]) ) )
                  1466           ?LINE   234
01FE              1467   _136:
01FE F2F80000  R  1468           MOV     R8,_3
0202 E6F93200     1469           MOV     R9,#032h
0206 D110         1470           ATOMIC  #02h
0208 1B89     2   1471           MULU    R8,R9
020A CC00     1   1472           NOP
020C F2F60EFE     1473           MOV     R6,MDL
0210 E6000000  R  1474           MOV     DPP0,#PAG _WAT_CurCommand
0214 CC00         1475           NOP
0216 F2FC0000  R  1476           MOV     R12,POF _WAT_CurCommand
021A F2FD0000  R  1477           MOV     R13,POF (_WAT_CurCommand+2)
021E 00C6         1478           ADD     R12,R6
0220 DA000000  R  1479           CALLS   SEG _strlen,_strlen
0224 F0F4         1480           MOV     R15,R4
0226 E00C         1481           MOV     R12,#00h
0228 F2F80000  R  1482           MOV     R8,_3
022C E6F93200     1483           MOV     R9,#032h
0230 D110         1484           ATOMIC  #02h
0232 1B89     2   1485           MULU    R8,R9
0234 CC00     1   1486           NOP
0236 F2F60EFE     1487           MOV     R6,MDL
023A E6000000  R  1488           MOV     DPP0,#PAG _WAT_CurCommand
023E CC00         1489           NOP
0240 F2FD0000  R  1490           MOV     R13,POF _WAT_CurCommand
0244 F2FE0000  R  1491           MOV     R14,POF (_WAT_CurCommand+2)
0248 00D6         1492           ADD     R13,R6
024A DA000000  R  1493           CALLS   SEG _MAT_Send,_MAT_Send
024E 46F4FFFF     1494           CMP     R4,#0FFFFh
0252 EA200204  R  1495           JMPA    cc_EQ,_169
                  1496   ; me_init.c  235                                {
                  1497   ; me_init.c  236                                        Me_Fsm_Init_End( ME_RS_FAILURE );
                  1498   ; me_init.c  237                                        break;
                  1499   ; me_init.c  238                                }
                  1500   ; me_init.c  239        
                  1501   ; me_init.c  240                                TimerId = SetTimer( NULL, MEINIT_TIMER_ID, DFT_
                         TIMEOUT, ME_TimerProc );
                  1502           ?LINE   240
0256 E6F80000  R  1503           MOV     R8,#SOF _ME_TimerProc
025A E6F90000  R  1504           MOV     R9,#SEG _ME_TimerProc
025E 8890         1505           MOV     [-R0],R9
               R  1506           ?SYMB   '',$,96,8
0260 8880         1507           MOV     [-R0],R8
               R  1508           ?SYMB   '',$,96,10
0262 E00C         1509           MOV     R12,#00h
0264 E00D         1510           MOV     R13,#00h
0266 E01E         1511           MOV     R14,#01h
0268 E6FF401F     1512           MOV     R15,#01F40h
026C DA000000  R  1513           CALLS   SEG _SetTimer,_SetTimer
0270 0804         1514           ADD     R0,#04h
               R  1515           ?SYMB   '',$,96,6
0272 D7400000  R  1516           EXTP    #PAG _TimerId,#01h
0276 F6F40000 1R  1517           MOV     POF _TimerId,R4
                  1518   ; me_init.c  241                                break;
                  1519           ?LINE   241
027A EA009E04  R  1520           JMPA    cc_UC,_212
                  1521   ; me_init.c  242        
                  1522   ; me_init.c  243                        case USERSTOP:
                  1523   ; me_init.c  244                                Me_Fsm_Init_End( ME_RS_USERSTOP );
                  1524   ; me_init.c  245                                break;
                  1525   ; me_init.c  246                        }
                  1526   ; me_init.c  247                        break;
                  1527   ; me_init.c  248        
                  1528   ; me_init.c  249                case ME_EXECUTE_COMMAND:
                  1529           ?LINE   249
027E              1530   _137:
               R  1531           ?SYMB   'R12',$,100,4
               R  1532           ?SYMB   'R8',$,100,3
                  1533   ; me_init.c  250                        switch( event )
                  1534           ?LINE   250
027E 48C1         1535           CMP     R12,#01h
0280 2D08         1536           JMPR    cc_EQ,_138
0282 48C2         1537           CMP     R12,#02h
0284 EA209004  R  1538           JMPA    cc_EQ,_184
0288 48C3         1539           CMP     R12,#03h
028A EA209804  R  1540           JMPA    cc_EQ,_189
028E EA009E04  R  1541           JMPA    cc_UC,_212
                  1542   ; me_init.c  251                        {
                  1543   ; me_init.c  252                        case DATAIN:
                  1544           ?LINE   252
0292              1545   _138:
               R  1546           ?SYMB   '',$,102,4
               R  1547           ?SYMB   '',$,102,3
               R  1548           ?SYMB   'R8',$,100,3
                  1549   ; me_init.c  253                                if( param == FRC_OK || param == FRC_ERROR || pa
                         ram == FRC_CMEERROR || param == FRC_CMSERROR )
                  1550           ?LINE   253
0292 4880         1551           CMP     R8,#00h
0294 2D06         1552           JMPR    cc_Z,_141
0296 4881         1553           CMP     R8,#01h
0298 2D04         1554           JMPR    cc_EQ,_141
029A 4882         1555           CMP     R8,#02h
029C 2D02         1556           JMPR    cc_EQ,_141
029E 4883         1557           CMP     R8,#03h
02A0 3D08         1558           JMPR    cc_NE,_142
02A2              1559   _141:
                  1560   ; me_init.c  254                                        KillTimer(NULL, TimerId);
                  1561           ?LINE   254
02A2 E00C         1562           MOV     R12,#00h
02A4 E00D         1563           MOV     R13,#00h
02A6 D7400000  R  1564           EXTP    #PAG _TimerId,#01h
02AA F2FE0000 1R  1565           MOV     R14,POF _TimerId
02AE DA000000  R  1566           CALLS   SEG _KillTimer,_KillTimer
02B2              1567   _142:
                  1568   ; me_init.c  255        
                  1569   ; me_init.c  256                                if ( param == FRC_OK )
                  1570           ?LINE   256
02B2 4880         1571           CMP     R8,#00h
02B4 EA30A603  R  1572           JMPA    cc_NZ,_155
                  1573   ; me_init.c  257                                {
                  1574   ; me_init.c  258                                        count++;
                  1575           ?LINE   258
02B8 0D23         1576           JMPR    cc_UC,_152
                  1577   ; me_init.c  259                                        if( -1 == MAT_Send( 0, WAT_CurCommand[c
                         ount], strlen(WAT_CurCommand[count]) ) )
                  1578   ; me_init.c  260                                        {
                  1579   ; me_init.c  261                                                Me_Fsm_Init_End( ME_RS_FAILURE 
                         );
                  1580   ; me_init.c  262                                                break;
                  1581   ; me_init.c  263                                        }
                  1582   ; me_init.c  264        
                  1583   ; me_init.c  265                                        TimerId = SetTimer( NULL, MEINIT_TIMER_
                         ID, DFT_TIMEOUT, ME_TimerProc );
                  1584   ; me_init.c  266        
                  1585   ; me_init.c  267                                        me_fsm_data.state ++;
                  1586   ; me_init.c  268                                        break;
                  1587   ; me_init.c  269                                }
                  1588   ; me_init.c  270        
                  1589   ; me_init.c  271                                else if( param == FRC_ERROR || param == FRC_CME
                         ERROR || param == FRC_CMSERROR )
                  1590   ; me_init.c  272                                {
                  1591   ; me_init.c  273                                        Me_Fsm_Init_End( ME_RS_FAILURE );
                  1592   ; me_init.c  274                                        break;
                  1593   ; me_init.c  275                                }
                  1594   ; me_init.c  276                                break;
                  1595   ; me_init.c  277        
                  1596   ; me_init.c  278                        case TIMEOUT:
                  1597   ; me_init.c  279                                Me_Fsm_Init_End( ME_RS_TIMEOUT );
                  1598   ; me_init.c  280                                break;
                  1599   ; me_init.c  281        
                  1600   ; me_init.c  282                        case USERSTOP:
                  1601   ; me_init.c  283                                Me_Fsm_Init_End( ME_RS_USERSTOP );
                  1602   ; me_init.c  284                                break;
                  1603   ; me_init.c  285                        }
                  1604   ; me_init.c  286                        break;
                  1605   ; me_init.c  287        
                  1606   ; me_init.c  288                case ME_EXECUTE_STKACTIVE:
                  1607           ?LINE   288
02BA              1608   _143:
               R  1609           ?SYMB   '',$,102,3
               R  1610           ?SYMB   'R12',$,100,4
               R  1611           ?SYMB   'R8',$,100,3
                  1612   ; me_init.c  289                        switch( event )
                  1613           ?LINE   289
02BA 48C1         1614           CMP     R12,#01h
02BC 2D08         1615           JMPR    cc_EQ,_144
02BE 48C2         1616           CMP     R12,#02h
02C0 EA209004  R  1617           JMPA    cc_EQ,_184
02C4 48C3         1618           CMP     R12,#03h
02C6 EA209804  R  1619           JMPA    cc_EQ,_189
02CA EA009E04  R  1620           JMPA    cc_UC,_212
                  1621   ; me_init.c  290                        {
                  1622   ; me_init.c  291                        case DATAIN:
                  1623           ?LINE   291
02CE              1624   _144:
               R  1625           ?SYMB   '',$,102,4
               R  1626           ?SYMB   '',$,102,3
               R  1627           ?SYMB   'R8',$,100,3
                  1628   ; me_init.c  292                                if( param == FRC_OK || param == FRC_ERROR || pa
                         ram == FRC_CMEERROR || param == FRC_CMSERROR )
                  1629           ?LINE   292
02CE 4880         1630           CMP     R8,#00h
02D0 2D06         1631           JMPR    cc_Z,_147
02D2 4881         1632           CMP     R8,#01h
02D4 2D04         1633           JMPR    cc_EQ,_147
02D6 4882         1634           CMP     R8,#02h
02D8 2D02         1635           JMPR    cc_EQ,_147
02DA 4883         1636           CMP     R8,#03h
02DC 3D08         1637           JMPR    cc_NE,_148
02DE              1638   _147:
                  1639   ; me_init.c  293                                        KillTimer(NULL, TimerId);
                  1640           ?LINE   293
02DE E00C         1641           MOV     R12,#00h
02E0 E00D         1642           MOV     R13,#00h
02E2 D7400000  R  1643           EXTP    #PAG _TimerId,#01h
02E6 F2FE0000 1R  1644           MOV     R14,POF _TimerId
02EA DA000000  R  1645           CALLS   SEG _KillTimer,_KillTimer
02EE              1646   _148:
                  1647   ; me_init.c  294        
                  1648   ; me_init.c  295                                if( param == FRC_OK || param == FRC_ERROR || pa
                         ram == FRC_CMEERROR || param == FRC_CMSERROR )
                  1649           ?LINE   295
02EE 4880         1650           CMP     R8,#00h
02F0 2D07         1651           JMPR    cc_Z,_152
02F2 4881         1652           CMP     R8,#01h
02F4 2D05         1653           JMPR    cc_EQ,_152
02F6 4882         1654           CMP     R8,#02h
02F8 2D03         1655           JMPR    cc_EQ,_152
02FA 4883         1656           CMP     R8,#03h
02FC EA309E04  R  1657           JMPA    cc_NE,_212
0300              1658   _152:
               R  1659           ?SYMB   '',$,102,3
                  1660   ; me_init.c  296                                {
                  1661   ; me_init.c  297                                        count++;
                  1662           ?LINE   297
0300 248F0000  R  1663           SUB     _3,ONES
                  1664   ; me_init.c  298                                        if( -1 == MAT_Send( 0, WAT_CurCommand[c
                         ount], strlen(WAT_CurCommand[count]) ) )
                  1665           ?LINE   298
0304 F2F80000  R  1666           MOV     R8,_3
0308 E6F93200     1667           MOV     R9,#032h
030C D110         1668           ATOMIC  #02h
030E 1B89     2   1669           MULU    R8,R9
0310 CC00     1   1670           NOP
0312 F2F60EFE     1671           MOV     R6,MDL
0316 E6000000  R  1672           MOV     DPP0,#PAG _WAT_CurCommand
031A CC00         1673           NOP
031C F2FC0000  R  1674           MOV     R12,POF _WAT_CurCommand
0320 F2FD0000  R  1675           MOV     R13,POF (_WAT_CurCommand+2)
0324 00C6         1676           ADD     R12,R6
0326 DA000000  R  1677           CALLS   SEG _strlen,_strlen
032A F0F4         1678           MOV     R15,R4
032C E00C         1679           MOV     R12,#00h
032E F2F80000  R  1680           MOV     R8,_3
0332 E6F93200     1681           MOV     R9,#032h
0336 D110         1682           ATOMIC  #02h
0338 1B89     2   1683           MULU    R8,R9
033A CC00     1   1684           NOP
033C F2F60EFE     1685           MOV     R6,MDL
0340 E6000000  R  1686           MOV     DPP0,#PAG _WAT_CurCommand
0344 CC00         1687           NOP
0346 F2FD0000  R  1688           MOV     R13,POF _WAT_CurCommand
034A F2FE0000  R  1689           MOV     R14,POF (_WAT_CurCommand+2)
034E 00D6         1690           ADD     R13,R6
0350 DA000000  R  1691           CALLS   SEG _MAT_Send,_MAT_Send
0354 46F4FFFF     1692           CMP     R4,#0FFFFh
0358 EA200204  R  1693           JMPA    cc_EQ,_169
                  1694   ; me_init.c  299                                        {
                  1695   ; me_init.c  300                                                Me_Fsm_Init_End( ME_RS_FAILURE 
                         );
                  1696   ; me_init.c  301                                                break;
                  1697   ; me_init.c  302                                        }
                  1698   ; me_init.c  303        
                  1699   ; me_init.c  304                                        TimerId = SetTimer( NULL, MEINIT_TIMER_
                         ID, DFT_TIMEOUT, ME_TimerProc );
                  1700           ?LINE   304
035C E6F80000  R  1701           MOV     R8,#SOF _ME_TimerProc
0360 E6F90000  R  1702           MOV     R9,#SEG _ME_TimerProc
0364 8890         1703           MOV     [-R0],R9
               R  1704           ?SYMB   '',$,96,8
0366 8880         1705           MOV     [-R0],R8
               R  1706           ?SYMB   '',$,96,10
0368 E00C         1707           MOV     R12,#00h
036A E00D         1708           MOV     R13,#00h
036C E01E         1709           MOV     R14,#01h
036E E6FF401F     1710           MOV     R15,#01F40h
0372 DA000000  R  1711           CALLS   SEG _SetTimer,_SetTimer
0376 0804         1712           ADD     R0,#04h
               R  1713           ?SYMB   '',$,96,6
0378 D7400000  R  1714           EXTP    #PAG _TimerId,#01h
037C F6F40000 1R  1715           MOV     POF _TimerId,R4
                  1716   ; me_init.c  305        
                  1717   ; me_init.c  306                                        me_fsm_data.state ++;
                  1718           ?LINE   306
0380 D7400000  R  1719           EXTP    #PAG _me_fsm_data,#01h
0384 248F0000 1R  1720           SUB     POF _me_fsm_data,ONES
                  1721   ; me_init.c  307                                        break;
                  1722   ; me_init.c  308                                }
                  1723   ; me_init.c  309                                break;
                  1724           ?LINE   309
0388 EA009E04  R  1725           JMPA    cc_UC,_212
                  1726   ; me_init.c  310        
                  1727   ; me_init.c  311                        case TIMEOUT:
                  1728   ; me_init.c  312                                Me_Fsm_Init_End( ME_RS_TIMEOUT );
                  1729   ; me_init.c  313                                break;
                  1730   ; me_init.c  314        
                  1731   ; me_init.c  315                        case USERSTOP:
                  1732   ; me_init.c  316                                Me_Fsm_Init_End( ME_RS_USERSTOP );
                  1733   ; me_init.c  317                                break;
                  1734   ; me_init.c  318                        }
                  1735   ; me_init.c  319                        break;
                  1736   ; me_init.c  320        
                  1737   ; me_init.c  321                case ME_EXECUTE_LAST:
                  1738           ?LINE   321
038C              1739   _153:
               R  1740           ?SYMB   'R12',$,100,4
               R  1741           ?SYMB   'R8',$,100,3
                  1742   ; me_init.c  322                        switch( event )
                  1743           ?LINE   322
038C 48C1         1744           CMP     R12,#01h
038E 2D08         1745           JMPR    cc_EQ,_154
0390 48C2         1746           CMP     R12,#02h
0392 EA209004  R  1747           JMPA    cc_EQ,_184
0396 48C3         1748           CMP     R12,#03h
0398 EA209804  R  1749           JMPA    cc_EQ,_189
039C EA009E04  R  1750           JMPA    cc_UC,_212
                  1751   ; me_init.c  323                        {
                  1752   ; me_init.c  324                        case DATAIN:
                  1753           ?LINE   324
03A0              1754   _154:
               R  1755           ?SYMB   '',$,102,4
               R  1756           ?SYMB   '',$,102,3
               R  1757           ?SYMB   'R8',$,100,3
                  1758   ; me_init.c  325                                if ( param == FRC_OK )
                  1759           ?LINE   325
03A0 4880         1760           CMP     R8,#00h
03A2 EA207A04  R  1761           JMPA    cc_Z,_178
                  1762   ; me_init.c  326                                {
                  1763   ; me_init.c  327                                        Me_Fsm_Init_End( ME_RS_SUCCESS );
                  1764   ; me_init.c  328                                        break;
                  1765   ; me_init.c  329                                }
                  1766           ?LINE   329
03A6              1767   _155:
                  1768   ; me_init.c  330        
                  1769   ; me_init.c  331                                else if( param == FRC_ERROR || param == FRC_CME
                         ERROR || param == FRC_CMSERROR )
                  1770           ?LINE   331
03A6 4881         1771           CMP     R8,#01h
03A8 2D2C         1772           JMPR    cc_EQ,_169
03AA 4882         1773           CMP     R8,#02h
03AC 2D2A         1774           JMPR    cc_EQ,_169
03AE 4883         1775           CMP     R8,#03h
03B0 EA309E04  R  1776           JMPA    cc_NE,_212
                  1777   ; me_init.c  332                                {
                  1778   ; me_init.c  333                                        Me_Fsm_Init_End( ME_RS_FAILURE );
                  1779           ?LINE   333
03B4 0D26         1780           JMPR    cc_UC,_169
                  1781   ; me_init.c  334                                        break;
                  1782   ; me_init.c  335                                }
                  1783   ; me_init.c  336                                break;
                  1784   ; me_init.c  337        
                  1785   ; me_init.c  338                        case TIMEOUT:
                  1786   ; me_init.c  339                                Me_Fsm_Init_End( ME_RS_TIMEOUT );
                  1787   ; me_init.c  340                                break;
                  1788   ; me_init.c  341        
                  1789   ; me_init.c  342                        case USERSTOP:
                  1790   ; me_init.c  343                                Me_Fsm_Init_End( ME_RS_USERSTOP );
                  1791   ; me_init.c  344                                break;
                  1792   ; me_init.c  345                        }
                  1793   ; me_init.c  346                        break;
                  1794   ; me_init.c  347        
                  1795   ; me_init.c  348                case ME_EXECUTE_GETVALUE:
                  1796           ?LINE   348
03B6              1797   _156:
               R  1798           ?SYMB   '',$,102,3
               R  1799           ?SYMB   'R12',$,100,4
               R  1800           ?SYMB   'R8',$,100,3
               R  1801           ?SYMB   'R9R6',$,100,2
               R  1802           ?SYMB   '0',$,101,1
                  1803   ; me_init.c  349                        switch( event )
                  1804           ?LINE   349
03B6 48C1         1805           CMP     R12,#01h
03B8 2D08         1806           JMPR    cc_EQ,_157
03BA 48C2         1807           CMP     R12,#02h
03BC EA209004  R  1808           JMPA    cc_EQ,_184
03C0 48C3         1809           CMP     R12,#03h
03C2 EA209804  R  1810           JMPA    cc_EQ,_189
03C6 EA009E04  R  1811           JMPA    cc_UC,_212
               R  1812           ?SYMB   '',$,102,1
                  1813   ; me_init.c  350                        {
                  1814   ; me_init.c  351                        case DATAIN:
                  1815           ?LINE   351
03CA              1816   _157:
               R  1817           ?SYMB   '',$,102,4
               R  1818           ?SYMB   '',$,102,3
               R  1819           ?SYMB   '',$,102,2
               R  1820           ?SYMB   'R8',$,100,3
               R  1821           ?SYMB   'R9R6',$,100,2
               R  1822           ?SYMB   '0',$,101,1
                  1823   ; me_init.c  352                                if( request_head->cmd == ME_INIT_WAVE_EQUIP_SET
                          )
                  1824           ?LINE   352
03CA D7500000  R  1825           EXTP    #PAG _request_head,#02h
03CE F2FC0000 2R  1826           MOV     R12,POF _request_head
03D2 F2FD0000 1R  1827           MOV     R13,POF (_request_head+2)
03D6 DC4D         1828           EXTP    R13,#01h
03D8 A8EC     1   1829           MOV     R14,[R12]
03DA EA306A04  R  1830           JMPA    cc_NZ,_174
               R  1831           ?SYMB   '',$,102,1
               R  1832           ?SYMB   '',$,9,354
                  1833   ; me_init.c  353                                {
                  1834   ; me_init.c  354                                        static int res = -1;
                  1835   ; me_init.c  355                                        if ( param == FRC_OK || param == FRC_ER
                         ROR || param == FRC_CMEERROR || param == FRC_CMSERROR )
                  1836           ?LINE   355
03DE 4880         1837           CMP     R8,#00h
03E0 2D06         1838           JMPR    cc_Z,_160
03E2 4881         1839           CMP     R8,#01h
03E4 2D04         1840           JMPR    cc_EQ,_160
03E6 4882         1841           CMP     R8,#02h
03E8 2D02         1842           JMPR    cc_EQ,_160
03EA 4883         1843           CMP     R8,#03h
03EC 3D0F         1844           JMPR    cc_NE,_170
03EE              1845   _160:
               R  1846           ?SYMB   '',$,102,3
               R  1847           ?SYMB   '',$,102,2
                  1848   ; me_init.c  356                                        {
                  1849   ; me_init.c  357                                                if( res != -1 )
                  1850           ?LINE   357
03EE F2F80000  R  1851           MOV     R8,_4
03F2 46F8FFFF     1852           CMP     R8,#0FFFFh
03F6 2D05         1853           JMPR    cc_EQ,_169
                  1854   ; me_init.c  358                                                        Me_Fsm_Init_End( res );
                  1855           ?LINE   358
03F8 F0C8         1856           MOV     R12,R8
03FA DA00A804  R  1857           CALLS   SEG _Me_Fsm_Init_End,_Me_Fsm_Init_End
03FE EA009E04  R  1858           JMPA    cc_UC,_212
0402              1859   _169:
                  1860   ; me_init.c  359                                                else
                  1861   ; me_init.c  360                                                        Me_Fsm_Init_End( ME_RS_
                         FAILURE );
                  1862           ?LINE   360
0402 E01C         1863           MOV     R12,#01h
0404 DA00A804  R  1864           CALLS   SEG _Me_Fsm_Init_End,_Me_Fsm_Init_End
                  1865   ; me_init.c  361                                        }
                  1866           ?LINE   361
0408 EA009E04  R  1867           JMPA    cc_UC,_212
040C              1868   _170:
               R  1869           ?SYMB   'R9R6',$,100,2
                  1870   ; me_init.c  362                                        else
                  1871   ; me_init.c  363                                        {
                  1872   ; me_init.c  364                                                if( strstr( data, "^SCKS: 1,1" 
                         ) != NULL 
                  1873   ; me_init.c  365                                                        || strstr( data, "^SCKS
                         : 0,1" ) != NULL )
                  1874           ?LINE   365
040C F0C9         1875           MOV     R12,R9
040E F0D6         1876           MOV     R13,R6
0410 E6FE0000  R  1877           MOV     R14,#POF _5
0414 E6FF0000  R  1878           MOV     R15,#PAG _5
0418 DA000000  R  1879           CALLS   SEG _strstr,_strstr
041C 7045         1880           OR      R4,R5
041E 3D0A         1881           JMPR    cc_NZ,_171
0420 F0C9         1882           MOV     R12,R9
0422 F0D6         1883           MOV     R13,R6
0424 E6FE0000  R  1884           MOV     R14,#POF _6
0428 E6FF0000  R  1885           MOV     R15,#PAG _6
042C DA000000  R  1886           CALLS   SEG _strstr,_strstr
0430 7045         1887           OR      R4,R5
0432 2D03         1888           JMPR    cc_Z,_172
0434              1889   _171:
               R  1890           ?SYMB   '',$,102,2
                  1891   ; me_init.c  366                                                {
                  1892   ; me_init.c  367                                                        res = ME_RS_SUCCESS;
                  1893           ?LINE   367
0434 F68E0000  R  1894           MOV     _4,ZEROS
                  1895   ; me_init.c  368                                                }
                  1896           ?LINE   368
0438 0D32         1897           JMPR    cc_UC,_212
043A              1898   _172:
               R  1899           ?SYMB   'R9R6',$,100,2
                  1900   ; me_init.c  369                                                else if( strstr( data, "^SCKS: 
                         1,0" ) != NULL 
                  1901   ; me_init.c  370                                                        || strstr( data, "^SCKS
                         : 0,0" ) != NULL )
                  1902           ?LINE   370
043A F0C9         1903           MOV     R12,R9
043C F0D6         1904           MOV     R13,R6
043E E6FE0000  R  1905           MOV     R14,#POF _7
0442 E6FF0000  R  1906           MOV     R15,#PAG _7
0446 DA000000  R  1907           CALLS   SEG _strstr,_strstr
044A 7045         1908           OR      R4,R5
044C 3D0A         1909           JMPR    cc_NZ,_173
044E F0C9         1910           MOV     R12,R9
0450 F0D6         1911           MOV     R13,R6
0452 E6FE0000  R  1912           MOV     R14,#POF _8
0456 E6FF0000  R  1913           MOV     R15,#PAG _8
045A DA000000  R  1914           CALLS   SEG _strstr,_strstr
               R  1915           ?SYMB   '',$,102,2
045E 7045         1916           OR      R4,R5
0460 2D1E         1917           JMPR    cc_Z,_212
0462              1918   _173:
                  1919   ; me_init.c  371                                                {
                  1920   ; me_init.c  372                                                        res = ME_RS_NOSIMCARD;
                  1921           ?LINE   372
0462 E098         1922           MOV     R8,#09h
0464 F6F80000  R  1923           MOV     _4,R8
                  1924   ; me_init.c  373                                                }
                  1925   ; me_init.c  374                                        }
                  1926   ; me_init.c  375                                        break;
                  1927           ?LINE   375
0468 0D1A         1928           JMPR    cc_UC,_212
               R  1929           ?SYMB   '',$,15,376
                  1930   ; me_init.c  376                                }
                  1931           ?LINE   376
046A              1932   _174:
               R  1933           ?SYMB   'R8',$,100,3
               R  1934           ?SYMB   'R9R6',$,100,2
               R  1935           ?SYMB   '0',$,101,1
                  1936   ; me_init.c  377        
                  1937   ; me_init.c  378                                if ( param == FRC_OK || param == FRC_ERROR || p
                         aram == FRC_CMEERROR || param == FRC_CMSERROR )
                  1938           ?LINE   378
046A 4880         1939           CMP     R8,#00h
046C 2D06         1940           JMPR    cc_Z,_178
046E 4881         1941           CMP     R8,#01h
0470 2D04         1942           JMPR    cc_EQ,_178
0472 4882         1943           CMP     R8,#02h
0474 2D02         1944           JMPR    cc_EQ,_178
0476 4883         1945           CMP     R8,#03h
0478 3D04         1946           JMPR    cc_NE,_179
               R  1947           ?SYMB   '',$,102,1
047A              1948   _178:
               R  1949           ?SYMB   '',$,102,3
               R  1950           ?SYMB   '',$,102,2
                  1951   ; me_init.c  379                                {
                  1952   ; me_init.c  380                                        Me_Fsm_Init_End( ME_RS_SUCCESS );
                  1953           ?LINE   380
047A E00C         1954           MOV     R12,#00h
047C DA00A804  R  1955           CALLS   SEG _Me_Fsm_Init_End,_Me_Fsm_Init_End
                  1956   ; me_init.c  381                                }
                  1957           ?LINE   381
0480 0D0E         1958           JMPR    cc_UC,_212
0482              1959   _179:
               R  1960           ?SYMB   'R9R6',$,100,2
               R  1961           ?SYMB   '0',$,101,1
                  1962   ; me_init.c  382                                else
                  1963   ; me_init.c  383                                {
                  1964   ; me_init.c  384                                        // GetInfo from ME
                  1965   ; me_init.c  385                                        MeInit_Filtrate( (const char *)data, da
                         talen );
                  1966           ?LINE   385
0482 F0C9         1967           MOV     R12,R9
0484 F0D6         1968           MOV     R13,R6
0486 D4E00600     1969           MOV     R14,[R0+#06H]
048A DA001405  R  1970           CALLS   SEG _MeInit_Filtrate,_MeInit_Filtrate
               R  1971           ?SYMB   '',$,102,2
                  1972   ; me_init.c  386                                }
                  1973   ; me_init.c  387                                break;
                  1974           ?LINE   387
048E 0D07         1975           JMPR    cc_UC,_212
                  1976   ; me_init.c  388        
                  1977   ; me_init.c  389                        case TIMEOUT:
                  1978           ?LINE   389
0490              1979   _184:
                  1980   ; me_init.c  390                                Me_Fsm_Init_End( ME_RS_TIMEOUT );
                  1981           ?LINE   390
0490 E07C         1982           MOV     R12,#07h
0492 DA00A804  R  1983           CALLS   SEG _Me_Fsm_Init_End,_Me_Fsm_Init_End
                  1984   ; me_init.c  391                                break;
                  1985           ?LINE   391
0496 0D03         1986           JMPR    cc_UC,_212
                  1987   ; me_init.c  392        
                  1988   ; me_init.c  393                        case USERSTOP:
                  1989           ?LINE   393
0498              1990   _189:
                  1991   ; me_init.c  394                                Me_Fsm_Init_End( ME_RS_USERSTOP );
                  1992           ?LINE   394
0498 E06C         1993           MOV     R12,#06h
049A DA00A804  R  1994           CALLS   SEG _Me_Fsm_Init_End,_Me_Fsm_Init_End
                  1995   ; me_init.c  395                                break;
                  1996   ; me_init.c  396                        }
                  1997   ; me_init.c  397                        break;
                  1998   ; me_init.c  398                }
                  1999           ?LINE   398
049E              2000   _212:
                  2001   ; me_init.c  399        
                  2002   ; me_init.c  400                return 0;
                  2003           ?LINE   400
049E E004         2004           MOV     R4,#00h
                  2005   ; me_init.c  401        }
                  2006           ?LINE   401
04A0 9860         2007           MOV     R6,[R0+]
               R  2008           ?SYMB   '',$,96,4
04A2 9880         2009           MOV     R8,[R0+]
               R  2010           ?SYMB   '',$,96,2
04A4 9890         2011           MOV     R9,[R0+]
               R  2012           ?SYMB   '',$,96,0
04A6 DB00         2013           RETS
                  2014   _Me_Fsm_Init    ENDP
               R  2015           ?SYMB   '',$,17,401
                  2016   ; me_init.c  402        
                  2017   ; me_init.c  403        static int Me_Fsm_Init_End( int Error )
                  2018   ; me_init.c  404        {
                  2019           ?LINE   404
               R  2020           ?SYMB   'Me_Fsm_Init_End',_Me_Fsm_Init_End,37,16
                  2021           ?SYMB   '',404,8,36
                  2022   _Me_Fsm_Init_End        PROC    FAR
                  2023           ?SYMB   '',00H,95,0
                  2024   ; Locals:
                  2025   ; 
                  2026   ; Statics:
                  2027   ; 
                  2028   ; CSEs:
                  2029   ;     Error = R12
                  2030   ; 
                  2031           ?SYMB   'Error',1,99,16
               R  2032           ?SYMB   'R12',$,100,1
                  2033   ; me_init.c  405                KillTimer( NULL, TimerId );
                  2034           ?LINE   405
04A8 88C0         2035           MOV     [-R0],R12
               R  2036           ?SYMB   '',$,96,2
04AA E00C         2037           MOV     R12,#00h
               R  2038           ?SYMB   '',$,102,1
04AC E00D         2039           MOV     R13,#00h
04AE D7400000  R  2040           EXTP    #PAG _TimerId,#01h
04B2 F2FE0000 1R  2041           MOV     R14,POF _TimerId
04B6 DA000000  R  2042           CALLS   SEG _KillTimer,_KillTimer
04BA 98C0         2043           MOV     R12,[R0+]
               R  2044           ?SYMB   '',$,96,0
               R  2045           ?SYMB   'R12',$,100,1
                  2046   ; me_init.c  406                request_head->error = Error;
                  2047           ?LINE   406
04BC D7500000  R  2048           EXTP    #PAG _request_head,#02h
04C0 F2FD0000 2R  2049           MOV     R13,POF _request_head
04C4 F2FE0000 1R  2050           MOV     R14,POF (_request_head+2)
04C8 DC4E         2051           EXTP    R14,#01h
04CA C4CD1200 1   2052           MOV     [R13+#012H],R12
                  2053   ; me_init.c  407                me_fsm_data.state = ME_FSMINIT_COMPLETE;
                  2054           ?LINE   407
04CE E07C         2055           MOV     R12,#07h
               R  2056           ?SYMB   '',$,102,1
04D0 D7400000  R  2057           EXTP    #PAG _me_fsm_data,#01h
04D4 F6FC0000 1R  2058           MOV     POF _me_fsm_data,R12
                  2059   ; me_init.c  408                if ( request_head->cmd == ME_INIT_WAVE_EVERYTIME )
                  2060           ?LINE   408
04D8 DC4E         2061           EXTP    R14,#01h
04DA A8FD     1   2062           MOV     R15,[R13]
04DC 48F2         2063           CMP     R15,#02h
04DE 3D04         2064           JMPR    cc_NE,_214
                  2065   ; me_init.c  409                        GetResultLength( request_head );        
                  2066           ?LINE   409
04E0 F0CD         2067           MOV     R12,R13
04E2 F0DE         2068           MOV     R13,R14
04E4 DA000000  R  2069           CALLS   SEG _GetResultLength,_GetResultLength
04E8              2070   _214:
                  2071   ; me_init.c  410                return 0;
                  2072           ?LINE   410
04E8 E004         2073           MOV     R4,#00h
                  2074   ; me_init.c  411        }
                  2075           ?LINE   411
04EA DB00         2076           RETS
                  2077   _Me_Fsm_Init_End        ENDP
               R  2078           ?SYMB   '',$,17,411
                  2079   ; me_init.c  412        
                  2080   ; me_init.c  413        static int Me_Fsm_Init_ResetTimer( void )
                  2081   ; me_init.c  414        {
                  2082           ?LINE   414
               R  2083           ?SYMB   'Me_Fsm_Init_ResetTimer',_Me_Fsm_Init_ResetTimer,37,16
                  2084           ?SYMB   '',414,8,36
                  2085   _Me_Fsm_Init_ResetTimer PROC    FAR
                  2086           ?SYMB   '',00H,95,0
                  2087   ; Locals:
                  2088   ; 
                  2089   ; Statics:
                  2090   ; 
                  2091   ; CSEs:
                  2092   ; 
                  2093   ; me_init.c  415                ErrorCount = 0; 
                  2094           ?LINE   415
04EC E6000000  R  2095           MOV     DPP0,#PAG _ErrorCount
04F0 E004         2096           MOV     R4,#00h
04F2 F68E0000  R  2097           MOV     POF _ErrorCount,ZEROS
                  2098   ; me_init.c  416                TimeoutCount = 0;
                  2099           ?LINE   416
04F6 F68E0000  R  2100           MOV     POF _TimeoutCount,ZEROS
                  2101   ; me_init.c  417                return 0;
                  2102   ; me_init.c  418        }
                  2103           ?LINE   418
04FA DB00         2104           RETS
                  2105   _Me_Fsm_Init_ResetTimer ENDP
               R  2106           ?SYMB   '',$,17,418
                  2107           ?SYMB   'ME_INIT_GETVALUE',542,13,565
                  2108   ; me_init.c  419        
                  2109   ; me_init.c  420        
                  2110   ; me_init.c  421        
                  2111   ; me_init.c  422        /*------------------------------------------------------------------
                  2112   ; me_init.c  423         *
                  2113   ; me_init.c  424         * Me_GetInitValue
                  2114   ; me_init.c  425         *
                  2115   ; me_init.c  426         *------------------------------------------------------------------*/
                  2116   ; me_init.c  427        
                  2117   ; me_init.c  428        ME_INIT_GETVALUE ME_Init_Value;
                  2118   ME_INIT_4_PR    ENDS
                  2119   
                  2120   ME_INIT_3_FB    SECTION DATA
0008              2121   _ME_Init_Value  LABEL   WORD
0008              2122           DS      18
                  2123           PUBLIC  _ME_Init_Value
               R  2124           ?SYMB   'ME_Init_Value',_ME_Init_Value,22,565
                  2125   ; me_init.c  429        
                  2126   ; me_init.c  430        int Me_GetInitValue( PME_INIT_GETVALUE pMeValue )
                  2127   ; me_init.c  431        {
                  2128   ME_INIT_3_FB    ENDS
                  2129   
                  2130   ME_INIT_4_PR    SECTION CODE
                  2131           ?LINE   431
                  2132           PUBLIC  _Me_GetInitValue
               R  2133           ?SYMB   'Me_GetInitValue',_Me_GetInitValue,37,16
                  2134           ?SYMB   '',431,8,34
                  2135   _Me_GetInitValue        PROC    FAR
                  2136           ?SYMB   '',00H,95,0
                  2137   ; Locals:
                  2138   ; 
                  2139   ; Statics:
                  2140   ; 
                  2141   ; CSEs:
                  2142   ;     pMeValue = R12R13
                  2143   ; 
                  2144           ?SYMB   'pMeValue',1,99,545
               R  2145           ?SYMB   'R12R13',$,100,1
                  2146   ; me_init.c  432                memcpy( pMeValue, &ME_Init_Value, sizeof( ME_INIT_GETVALUE ) );
                  2147           ?LINE   432
04FC E6FE1200     2148           MOV     R14,#012h
0500 88E0         2149           MOV     [-R0],R14
               R  2150           ?SYMB   '',$,96,2
0502 E6FE0000  R  2151           MOV     R14,#POF _ME_Init_Value
0506 E6FF0000  R  2152           MOV     R15,#PAG _ME_Init_Value
050A DA000000  R  2153           CALLS   SEG _memcpy,_memcpy
               R  2154           ?SYMB   '',$,102,1
050E 0802         2155           ADD     R0,#02h
               R  2156           ?SYMB   '',$,96,0
                  2157   ; me_init.c  433                return 0;
                  2158           ?LINE   433
0510 E004         2159           MOV     R4,#00h
                  2160   ; me_init.c  434        }
                  2161           ?LINE   434
0512 DB00         2162           RETS
                  2163   _Me_GetInitValue        ENDP
               R  2164           ?SYMB   '',$,17,434
                  2165   ; me_init.c  435        
                  2166   ; me_init.c  436        
                  2167   ; me_init.c  437        #define MEINIT_ATRET_STRLEN             48
                  2168   ; me_init.c  438        static char * MeInit_Filtrate( const char * SrcStr, int SrcLen )
                  2169   ; me_init.c  439        {
                  2170           ?LINE   439
               R  2171           ?SYMB   'MeInit_Filtrate',_MeInit_Filtrate,37,270
                  2172           ?SYMB   '',439,8,36
                  2173   ME_INIT_4_PR    ENDS
                  2174   
                  2175   ME_INIT_5_CO    SECTION DATA
000C              2176   _215_INIT       LABEL   BYTE
000C 2B435245     2177           DB      02Bh,043h,052h,045h,047h
0010 47          
0011 3A00002B     2178           DB      03Ah,00h,00h,02Bh,043h
0015 43          
0016 47524547     2179           DB      047h,052h,045h,047h,03Ah
001A 3A          
001B 002B434F     2180           DB      00h,02Bh,043h,04Fh,050h
001F 50          
0020 533A0000     2181           DB      053h,03Ah,00h,00h,00h
0024 00          
0025 00000000     2182           DB      00h,00h,00h,00h,00h
0029 00          
002A 0000         2183           DB      00h,00h
                  2184   ME_INIT_5_CO    ENDS
                  2185   
                  2186   ME_INIT_4_PR    SECTION CODE
                  2187   _MeInit_Filtrate        PROC    FAR
                  2188           ?SYMB   '',03c0H,95,0
0514 8890         2189           MOV     [-R0],R9
               R  2190           ?SYMB   '',$,96,2
0516 8880         2191           MOV     [-R0],R8
               R  2192           ?SYMB   '',$,96,4
0518 8870         2193           MOV     [-R0],R7
               R  2194           ?SYMB   '',$,96,6
051A 8860         2195           MOV     [-R0],R6
               R  2196           ?SYMB   '',$,96,8
051C 88D0         2197           MOV     [-R0],R13
               R  2198           ?SYMB   '',$,96,10
051E 88C0         2199           MOV     [-R0],R12
               R  2200           ?SYMB   '',$,96,12
0520 26F05000     2201           SUB     R0,#050h
               R  2202           ?SYMB   '',$,96,92
                  2203   ; Locals:
                  2204   ;     NotifyMsg = offset 0
                  2205   ;     WAT_QUERY_KEYWORD = offset 48
                  2206   ; 
                  2207   ; Statics:
                  2208   ; 
                  2209   ; CSEs:
                  2210   ;     x = R8
                  2211   ;     i = R9
                  2212   ;     ptemp = R6R7
                  2213   ;     ptemp + x = R14R15
                  2214   ;     SrcStr = offset 80
                  2215   ; 
                  2216           ?SYMB   'SrcStr',2,99,270
                  2217           ?SYMB   'i',3,98,16
                  2218           ?SYMB   'x',4,98,16
               R  2219           ?SYMB   '-c',$,101,2
                  2220   ; me_init.c  440                int             i, x=0;
                  2221           ?LINE   440
0524 E008         2222           MOV     R8,#00h
               R  2223           ?SYMB   'R8',$,100,4
                  2224           ?SYMB   'ptemp',1,98,270
                  2225           ?SYMB   '',02390002H,5,568
                  2226           ?SYMB   '',16,47,569
                  2227           ?SYMB   '',0,30,0
                  2228           ?SYMB   '',47,49,0
                  2229           ?SYMB   'NotifyMsg',6,98,568
               R  2230           ?SYMB   '-5c',$,101,6
                  2231           ?SYMB   '',023b0002H,5,570
                  2232           ?SYMB   '',16,47,571
                  2233           ?SYMB   '',0,30,0
                  2234           ?SYMB   '',7,49,0
                  2235           ?SYMB   '',023d023aH,5,572
                  2236           ?SYMB   '',16,47,573
                  2237           ?SYMB   '',0,30,0
                  2238           ?SYMB   '',3,49,0
                  2239           ?SYMB   'WAT_QUERY_KEYWORD',5,98,572
               R  2240           ?SYMB   '-2c',$,101,5
                  2241   ; me_init.c  441                char *  ptemp;
                  2242   ; me_init.c  442                char    NotifyMsg[MEINIT_ATRET_STRLEN];
                  2243   ; me_init.c  443                const char      WAT_QUERY_KEYWORD[4][8] = {     "+CREG:",
                  2244   ; me_init.c  444                                                                                
                                         "+CGREG:",
                  2245   ; me_init.c  445                                                                                
                                         "+COPS:", "", };                // KeyWord of GetInfo
                  2246           ?LINE   445
0526 E6F40000  R  2247           MOV     R4,#POF _215_INIT
052A E6F50000  R  2248           MOV     R5,#PAG _215_INIT
052E E6FA3000     2249           MOV     R10,#030h
0532 00A0         2250           ADD     R10,R0
0534 E6F32000     2251           MOV     R3,#020h
0538 DA000000  R  2252           CALLS   SEG __cpfnb,__cpfnb
                  2253   ; me_init.c  446        
                  2254   ; me_init.c  447                for( i =0; i<3; i++ )
                  2255           ?LINE   447
053C E009         2256           MOV     R9,#00h
               R  2257           ?SYMB   'R9',$,100,3
053E              2258   _216:
                  2259   ; me_init.c  448                {
                  2260   ; me_init.c  449                        if( (ptemp = strstr( SrcStr, WAT_QUERY_KEYWORD[i] ) ) =
                         = NULL )
                  2261           ?LINE   449
053E D4C05000     2262           MOV     R12,[R0+#050H]
0542 D4D05200     2263           MOV     R13,[R0+#052H]
0546 E6FE3000     2264           MOV     R14,#030h
054A 00E0         2265           ADD     R14,R0
054C 66FEFF3F     2266           AND     R14,#03FFFh
0550 F2FF02FE     2267           MOV     R15,DPP1
0554 F019         2268           MOV     R1,R9
0556 5C31         2269           SHL     R1,#03h
0558 00E1         2270           ADD     R14,R1
055A DA000000  R  2271           CALLS   SEG _strstr,_strstr
055E F064         2272           MOV     R6,R4
0560 F075         2273           MOV     R7,R5
               R  2274           ?SYMB   'R6R7',$,100,1
0562 F0C7         2275           MOV     R12,R7
0564 70C6         2276           OR      R12,R6
0566 EA200A06  R  2277           JMPA    cc_Z,_227
                  2278   ; me_init.c  450                                continue;
                  2279   ; me_init.c  451        
                  2280   ; me_init.c  452                        x = 0;
                  2281           ?LINE   452
056A E008         2282           MOV     R8,#00h
               R  2283           ?SYMB   '',$,102,4
               R  2284           ?SYMB   'R8',$,100,4
                  2285   ; me_init.c  453                        while( *(ptemp+x) != 10 && *(ptemp+x) != 13 && *(ptemp+
                         x) != 0 && x < MEINIT_ATRET_STRLEN-1 )
                  2286           ?LINE   453
056C 0D09         2287           JMPR    cc_UC,_218
056E              2288   _217:
                  2289   ; me_init.c  454                        {
                  2290   ; me_init.c  455                                NotifyMsg[x] = *(ptemp+x);
                  2291           ?LINE   455
056E F0C6         2292           MOV     R12,R6
0570 F0D7         2293           MOV     R13,R7
0572 00C8         2294           ADD     R12,R8
0574 DC4D         2295           EXTP    R13,#01h
0576 A92C     1   2296           MOVB    RL1,[R12]
0578 F0C8         2297           MOV     R12,R8
057A 00C0         2298           ADD     R12,R0
057C B92C         2299           MOVB    [R12],RL1
                  2300   ; me_init.c  456                                x++;
                  2301           ?LINE   456
057E 0881         2302           ADD     R8,#01h
               R  2303           ?SYMB   '',$,102,4
               R  2304           ?SYMB   'R8',$,100,4
                  2305           ?LINE   453
0580              2306   _218:
0580 F0E6         2307           MOV     R14,R6
0582 F0F7         2308           MOV     R15,R7
0584 00E8         2309           ADD     R14,R8
0586 DC4F         2310           EXTP    R15,#01h
0588 A92E     1   2311           MOVB    RL1,[R14]
058A 47F20A00     2312           CMPB    RL1,#0Ah
058E 2D0B         2313           JMPR    cc_EQ,_221
0590 DC4F         2314           EXTP    R15,#01h
0592 A92E     1   2315           MOVB    RL1,[R14]
0594 47F20D00     2316           CMPB    RL1,#0Dh
0598 2D06         2317           JMPR    cc_EQ,_221
059A DC4F         2318           EXTP    R15,#01h
059C A92E     1   2319           MOVB    RL1,[R14]
059E 2D03         2320           JMPR    cc_Z,_221
05A0 46F82F00     2321           CMP     R8,#02Fh
05A4 CDE4         2322           JMPR    cc_SLT,_217
05A6              2323   _221:
                  2324   ; me_init.c  457                        }
                  2325   ; me_init.c  458                        NotifyMsg[x] = 0;
                  2326           ?LINE   458
05A6 E102         2327           MOVB    RL1,#00h
05A8 F0C8         2328           MOV     R12,R8
05AA 00C0         2329           ADD     R12,R0
05AC B92C         2330           MOVB    [R12],RL1
                  2331   ; me_init.c  459        
                  2332   ; me_init.c  460                        // Analyse Info
                  2333   ; me_init.c  461                        if( i == 0 )                    // +CREG: <mode>,<stat>
                  2334           ?LINE   461
05AE 4890         2335           CMP     R9,#00h
05B0 3D0C         2336           JMPR    cc_NZ,_222
                  2337   ; me_init.c  462                        {
                  2338   ; me_init.c  463                                MEInit_AnaCREG( NotifyMsg, &(ME_Init_Value.CREG
                         ) );
                  2339           ?LINE   463
05B2 F0C0         2340           MOV     R12,R0
05B4 66FCFF3F     2341           AND     R12,#03FFFh
05B8 F2FD02FE     2342           MOV     R13,DPP1
05BC E6FE0000  R  2343           MOV     R14,#POF _ME_Init_Value
05C0 E6FF0000  R  2344           MOV     R15,#PAG _ME_Init_Value
05C4 DA002406  R  2345           CALLS   SEG _MEInit_AnaCREG,_MEInit_AnaCREG
                  2346   ; me_init.c  464                        }
                  2347           ?LINE   464
05C8 0D20         2348           JMPR    cc_UC,_227
05CA              2349   _222:
                  2350   ; me_init.c  465                        else if( i == 1 )               // +CGREG: <stat>
                  2351           ?LINE   465
05CA 4891         2352           CMP     R9,#01h
05CC 3D0C         2353           JMPR    cc_NE,_223
                  2354   ; me_init.c  466                        {
                  2355   ; me_init.c  467                                MEInit_AnaCGREG( NotifyMsg, &(ME_Init_Value.CGR
                         EG) );
                  2356           ?LINE   467
05CE F0C0         2357           MOV     R12,R0
05D0 66FCFF3F     2358           AND     R12,#03FFFh
05D4 F2FD02FE     2359           MOV     R13,DPP1
05D8 E6FE0000  R  2360           MOV     R14,#POF _ME_Init_Value+1
05DC E6FF0000  R  2361           MOV     R15,#PAG _ME_Init_Value
05E0 DA006406  R  2362           CALLS   SEG _MEInit_AnaCGREG,_MEInit_AnaCGREG
                  2363   ; me_init.c  468                        }
                  2364           ?LINE   468
05E4 0D12         2365           JMPR    cc_UC,_227
05E6              2366   _223:
                  2367   ; me_init.c  469                        else if( i == 2 )               // +COPS: 0<,2,46000>
                  2368           ?LINE   469
05E6 4892         2369           CMP     R9,#02h
05E8 3D10         2370           JMPR    cc_NE,_227
                  2371   ; me_init.c  470                        {
                  2372   ; me_init.c  471                                MEInit_AnaCOPS( NotifyMsg, ME_Init_Value.COPS_N
                         umeric, MEINIT_ATRET_COPSLEN );
                  2373           ?LINE   471
05EA E6FC1000     2374           MOV     R12,#010h
05EE 88C0         2375           MOV     [-R0],R12
               R  2376           ?SYMB   '',$,96,94
05F0 E02C         2377           MOV     R12,#02h
05F2 00C0         2378           ADD     R12,R0
05F4 66FCFF3F     2379           AND     R12,#03FFFh
05F8 F2FD02FE     2380           MOV     R13,DPP1
05FC E6FE0000  R  2381           MOV     R14,#POF _ME_Init_Value+2
0600 E6FF0000  R  2382           MOV     R15,#PAG _ME_Init_Value
0604 DA007206  R  2383           CALLS   SEG _MEInit_AnaCOPS,_MEInit_AnaCOPS
0608 0802         2384           ADD     R0,#02h
               R  2385           ?SYMB   '',$,96,92
                  2386           ?LINE   447
060A              2387   _227:
               R  2388           ?SYMB   '',$,102,3
               R  2389           ?SYMB   'R9',$,100,3
060A 8029         2390           CMPI1   R9,#02h
060C CD98         2391           JMPR    cc_SLT,_216
               R  2392           ?SYMB   '',$,102,2
                  2393   ; me_init.c  472                        }
                  2394   ; me_init.c  473                }
                  2395   ; me_init.c  474        
                  2396   ; me_init.c  475                return ptemp +x-1;
                  2397           ?LINE   475
060E F046         2398           MOV     R4,R6
0610 F057         2399           MOV     R5,R7
0612 0048         2400           ADD     R4,R8
0614 2841         2401           SUB     R4,#01h
               R  2402           ?SYMB   '',$,102,5
               R  2403           ?SYMB   '',$,102,6
                  2404   ; me_init.c  476        }
                  2405           ?LINE   476
0616 06F05400     2406           ADD     R0,#054h
               R  2407           ?SYMB   '',$,96,8
061A 9860         2408           MOV     R6,[R0+]
               R  2409           ?SYMB   '',$,102,1
               R  2410           ?SYMB   '',$,96,6
061C 9870         2411           MOV     R7,[R0+]
               R  2412           ?SYMB   '',$,96,4
061E 9880         2413           MOV     R8,[R0+]
               R  2414           ?SYMB   '',$,102,4
               R  2415           ?SYMB   '',$,96,2
0620 9890         2416           MOV     R9,[R0+]
               R  2417           ?SYMB   '',$,102,3
               R  2418           ?SYMB   '',$,96,0
0622 DB00         2419           RETS
                  2420   _MeInit_Filtrate        ENDP
               R  2421           ?SYMB   '',$,17,476
                  2422   ; me_init.c  477        
                  2423   ; me_init.c  478        
                  2424   ; me_init.c  479        static int MEInit_AnaCREG( char * Content, BYTE *stat )
                  2425   ; me_init.c  480        {
                  2426           ?LINE   480
               R  2427           ?SYMB   'MEInit_AnaCREG',_MEInit_AnaCREG,37,16
                  2428           ?SYMB   '',480,8,36
                  2429   _MEInit_AnaCREG PROC    FAR
                  2430           ?SYMB   '',0100H,95,0
0624 8880         2431           MOV     [-R0],R8
               R  2432           ?SYMB   '',$,96,2
0626 2802         2433           SUB     R0,#02h
               R  2434           ?SYMB   '',$,96,4
                  2435   ; Locals:
                  2436   ;     temp = offset 0
                  2437   ; 
                  2438   ; Statics:
                  2439   ; 
                  2440   ; CSEs:
                  2441   ;     Content = R12R13
                  2442   ;     offset = R8
                  2443   ;     stat = R14R15
                  2444   ; 
                  2445           ?SYMB   'Content',3,99,270
                  2446           ?SYMB   'stat',1,99,437
                  2447           ?SYMB   'offset',2,98,16
                  2448           ?SYMB   'temp',4,98,263
               R  2449           ?SYMB   '-4',$,101,4
               R  2450           ?SYMB   'R12R13',$,100,3
               R  2451           ?SYMB   'R14R15',$,100,1
                  2452   ; me_init.c  481                int offset;
                  2453   ; me_init.c  482                BYTE temp;
                  2454   ; me_init.c  483        
                  2455   ; me_init.c  484                offset = ME_Search_integer( Content, &temp,TRUE );
                  2456           ?LINE   484
0628 88C0         2457           MOV     [-R0],R12
               R  2458           ?SYMB   '',$,96,6
062A 88D0         2459           MOV     [-R0],R13
               R  2460           ?SYMB   '',$,96,8
062C 88E0         2461           MOV     [-R0],R14
               R  2462           ?SYMB   '',$,96,10
062E 88F0         2463           MOV     [-R0],R15
               R  2464           ?SYMB   '',$,96,12
0630 E011         2465           MOV     R1,#01h
0632 8810         2466           MOV     [-R0],R1
               R  2467           ?SYMB   '',$,96,14
0634 E0AE         2468           MOV     R14,#0Ah
               R  2469           ?SYMB   '',$,102,1
0636 00E0         2470           ADD     R14,R0
0638 66FEFF3F     2471           AND     R14,#03FFFh
063C F2FF02FE     2472           MOV     R15,DPP1
0640 DA00F806  R  2473           CALLS   SEG _ME_Search_integer,_ME_Search_integer
               R  2474           ?SYMB   '',$,102,3
0644 0802         2475           ADD     R0,#02h
               R  2476           ?SYMB   '',$,96,12
0646 F084         2477           MOV     R8,R4
               R  2478           ?SYMB   'R8',$,100,2
0648 98F0         2479           MOV     R15,[R0+]
               R  2480           ?SYMB   '',$,96,10
064A 98E0         2481           MOV     R14,[R0+]
               R  2482           ?SYMB   '',$,96,8
               R  2483           ?SYMB   'R14R15',$,100,1
064C 98D0         2484           MOV     R13,[R0+]
               R  2485           ?SYMB   '',$,96,6
064E 98C0         2486           MOV     R12,[R0+]
               R  2487           ?SYMB   '',$,96,4
               R  2488           ?SYMB   'R12R13',$,100,3
                  2489   ; me_init.c  485                ME_Search_integer( Content+offset, stat, FALSE );
                  2490           ?LINE   485
0650 E001         2491           MOV     R1,#00h
0652 8810         2492           MOV     [-R0],R1
               R  2493           ?SYMB   '',$,96,6
0654 00C8         2494           ADD     R12,R8
               R  2495           ?SYMB   '',$,102,3
0656 DA00F806  R  2496           CALLS   SEG _ME_Search_integer,_ME_Search_integer
               R  2497           ?SYMB   '',$,102,2
               R  2498           ?SYMB   '',$,102,1
065A 0802         2499           ADD     R0,#02h
               R  2500           ?SYMB   '',$,96,4
                  2501   ; me_init.c  486                return 0;
                  2502           ?LINE   486
065C E004         2503           MOV     R4,#00h
               R  2504           ?SYMB   '',$,102,4
                  2505   ; me_init.c  487        }
                  2506           ?LINE   487
065E 0802         2507           ADD     R0,#02h
               R  2508           ?SYMB   '',$,96,2
0660 9880         2509           MOV     R8,[R0+]
               R  2510           ?SYMB   '',$,96,0
0662 DB00         2511           RETS
                  2512   _MEInit_AnaCREG ENDP
               R  2513           ?SYMB   '',$,17,487
                  2514   ; me_init.c  488        
                  2515   ; me_init.c  489        static int MEInit_AnaCGREG( char * Content, BYTE *stat )
                  2516   ; me_init.c  490        {
                  2517           ?LINE   490
               R  2518           ?SYMB   'MEInit_AnaCGREG',_MEInit_AnaCGREG,37,16
                  2519           ?SYMB   '',490,8,36
                  2520   _MEInit_AnaCGREG        PROC    FAR
                  2521           ?SYMB   '',00H,95,0
                  2522   ; Locals:
                  2523   ; 
                  2524   ; Statics:
                  2525   ; 
                  2526   ; CSEs:
                  2527   ;     Content = R12R13
                  2528   ;     stat = R14R15
                  2529   ; 
                  2530           ?SYMB   'Content',2,99,270
                  2531           ?SYMB   'stat',1,99,437
               R  2532           ?SYMB   'R12R13',$,100,2
               R  2533           ?SYMB   'R14R15',$,100,1
                  2534   ; me_init.c  491                ME_Search_integer( Content, stat,TRUE );
                  2535           ?LINE   491
0664 E011         2536           MOV     R1,#01h
0666 8810         2537           MOV     [-R0],R1
               R  2538           ?SYMB   '',$,96,2
0668 DA00F806  R  2539           CALLS   SEG _ME_Search_integer,_ME_Search_integer
               R  2540           ?SYMB   '',$,102,2
               R  2541           ?SYMB   '',$,102,1
066C 0802         2542           ADD     R0,#02h
               R  2543           ?SYMB   '',$,96,0
                  2544   ; me_init.c  492                return 0;
                  2545           ?LINE   492
066E E004         2546           MOV     R4,#00h
                  2547   ; me_init.c  493        }
                  2548           ?LINE   493
0670 DB00         2549           RETS
                  2550   _MEInit_AnaCGREG        ENDP
               R  2551           ?SYMB   '',$,17,493
                  2552   ; me_init.c  494        
                  2553   ; me_init.c  495        static int MEInit_AnaCOPS( char * Content, char * COPSNum, int Len )
                  2554   ; me_init.c  496        {
                  2555           ?LINE   496
               R  2556           ?SYMB   'MEInit_AnaCOPS',_MEInit_AnaCOPS,37,16
                  2557           ?SYMB   '',496,8,36
                  2558   _MEInit_AnaCOPS PROC    FAR
                  2559           ?SYMB   '',0340H,95,0
0672 8890         2560           MOV     [-R0],R9
               R  2561           ?SYMB   '',$,96,2
0674 8880         2562           MOV     [-R0],R8
               R  2563           ?SYMB   '',$,96,4
0676 8860         2564           MOV     [-R0],R6
               R  2565           ?SYMB   '',$,96,6
0678 2802         2566           SUB     R0,#02h
               R  2567           ?SYMB   '',$,96,8
067A F06F         2568           MOV     R6,R15
067C F09E         2569           MOV     R9,R14
                  2570   ; Locals:
                  2571   ;     temp = offset 0
                  2572   ; 
                  2573   ; Statics:
                  2574   ; 
                  2575   ; CSEs:
                  2576   ;     offset = R8
                  2577   ;     AnaContent = R12R13
                  2578   ;     COPSNum = R9R6
                  2579   ;     Content = R12R13
                  2580   ;     Len = offset 8
                  2581   ; 
                  2582           ?SYMB   'Content',5,99,270
                  2583           ?SYMB   'COPSNum',2,99,270
                  2584           ?SYMB   'Len',1,99,16
                  2585           ?SYMB   'AnaContent',3,98,270
                  2586           ?SYMB   'offset',4,98,16
                  2587           ?SYMB   'temp',6,98,263
               R  2588           ?SYMB   '-8',$,101,6
               R  2589           ?SYMB   'R12R13',$,100,5
               R  2590           ?SYMB   'R9R6',$,100,2
               R  2591           ?SYMB   '0',$,101,1
                  2592   ; me_init.c  497                char * AnaContent;
                  2593   ; me_init.c  498                int offset;
                  2594   ; me_init.c  499                BYTE temp;
                  2595   ; me_init.c  500        
                  2596   ; me_init.c  501                offset = ME_Search_integer( Content, &temp,TRUE );
                  2597           ?LINE   501
067E 88C0         2598           MOV     [-R0],R12
               R  2599           ?SYMB   '',$,96,10
0680 88D0         2600           MOV     [-R0],R13
               R  2601           ?SYMB   '',$,96,12
0682 E01E         2602           MOV     R14,#01h
0684 88E0         2603           MOV     [-R0],R14
               R  2604           ?SYMB   '',$,96,14
0686 E06E         2605           MOV     R14,#06h
0688 00E0         2606           ADD     R14,R0
068A 66FEFF3F     2607           AND     R14,#03FFFh
068E F2FF02FE     2608           MOV     R15,DPP1
0692 DA00F806  R  2609           CALLS   SEG _ME_Search_integer,_ME_Search_integer
               R  2610           ?SYMB   '',$,102,5
0696 0802         2611           ADD     R0,#02h
               R  2612           ?SYMB   '',$,96,12
0698 F084         2613           MOV     R8,R4
               R  2614           ?SYMB   'R8',$,100,4
069A 98D0         2615           MOV     R13,[R0+]
               R  2616           ?SYMB   '',$,96,10
069C 98C0         2617           MOV     R12,[R0+]
               R  2618           ?SYMB   '',$,96,8
               R  2619           ?SYMB   'R12R13',$,100,5
                  2620   ; me_init.c  502        
                  2621   ; me_init.c  503                AnaContent = Content+offset;
                  2622           ?LINE   503
069E 00C8         2623           ADD     R12,R8
               R  2624           ?SYMB   '',$,102,5
06A0 F08C         2625           MOV     R8,R12
               R  2626           ?SYMB   '',$,102,4
06A2 F0ED         2627           MOV     R14,R13
               R  2628           ?SYMB   'R12R13',$,100,3
                  2629   ; me_init.c  504                offset = ME_Search_integer( AnaContent, &temp,FALSE );
                  2630           ?LINE   504
06A4 88D0         2631           MOV     [-R0],R13
               R  2632           ?SYMB   '',$,96,10
06A6 88C0         2633           MOV     [-R0],R12
               R  2634           ?SYMB   '',$,96,12
06A8 E00E         2635           MOV     R14,#00h
06AA 88E0         2636           MOV     [-R0],R14
               R  2637           ?SYMB   '',$,96,14
06AC E06E         2638           MOV     R14,#06h
06AE 00E0         2639           ADD     R14,R0
06B0 66FEFF3F     2640           AND     R14,#03FFFh
06B4 F2FF02FE     2641           MOV     R15,DPP1
06B8 DA00F806  R  2642           CALLS   SEG _ME_Search_integer,_ME_Search_integer
               R  2643           ?SYMB   '',$,102,3
06BC 0802         2644           ADD     R0,#02h
               R  2645           ?SYMB   '',$,96,12
06BE F084         2646           MOV     R8,R4
               R  2647           ?SYMB   'R8',$,100,4
06C0 98C0         2648           MOV     R12,[R0+]
               R  2649           ?SYMB   '',$,96,10
06C2 98D0         2650           MOV     R13,[R0+]
               R  2651           ?SYMB   '',$,96,8
               R  2652           ?SYMB   'R12R13',$,100,3
                  2653   ; me_init.c  505        
                  2654   ; me_init.c  506                if( offset == -1 )
                  2655           ?LINE   506
06C4 46F8FFFF     2656           CMP     R8,#0FFFFh
06C8 3D06         2657           JMPR    cc_NE,_228
               R  2658           ?SYMB   '',$,102,1
                  2659   ; me_init.c  507                {
                  2660   ; me_init.c  508                        *COPSNum = 0;
                  2661           ?LINE   508
06CA E102         2662           MOVB    RL1,#00h
06CC DC46         2663           EXTP    R6,#01h
06CE B929     1   2664           MOVB    [R9],RL1
                  2665   ; me_init.c  509                        return -1;
                  2666           ?LINE   509
06D0 E6F4FFFF     2667           MOV     R4,#0FFFFh
06D4 0D0C         2668           JMPR    cc_UC,_229
                  2669   ; me_init.c  510                }
                  2670           ?LINE   510
06D6              2671   _228:
               R  2672           ?SYMB   '',$,102,2
               R  2673           ?SYMB   '',$,102,4
               R  2674           ?SYMB   '',$,102,3
               R  2675           ?SYMB   'R8',$,100,4
               R  2676           ?SYMB   'R12R13',$,100,3
               R  2677           ?SYMB   'R9R6',$,100,2
               R  2678           ?SYMB   '0',$,101,1
                  2679   ; me_init.c  511        
                  2680   ; me_init.c  512                AnaContent += offset;
                  2681           ?LINE   512
06D6 F0E8         2682           MOV     R14,R8
06D8 BCFE         2683           ASHR    R14,#0Fh
06DA 00C8         2684           ADD     R12,R8
               R  2685           ?SYMB   '',$,102,3
               R  2686           ?SYMB   'R12R13',$,100,3
                  2687   ; me_init.c  513                ME_Search_String( AnaContent, COPSNum, Len );
                  2688           ?LINE   513
06DC D4800800     2689           MOV     R8,[R0+#08H]
               R  2690           ?SYMB   '',$,102,4
06E0 8880         2691           MOV     [-R0],R8
               R  2692           ?SYMB   '',$,96,10
06E2 F0E9         2693           MOV     R14,R9
06E4 F0F6         2694           MOV     R15,R6
06E6 DA00AC07  R  2695           CALLS   SEG _ME_Search_String,_ME_Search_String
               R  2696           ?SYMB   '',$,102,2
               R  2697           ?SYMB   '',$,102,3
06EA 0802         2698           ADD     R0,#02h
               R  2699           ?SYMB   '',$,96,8
                  2700   ; me_init.c  514                return 0;
                  2701           ?LINE   514
06EC E004         2702           MOV     R4,#00h
                  2703   ; me_init.c  515        }
                  2704           ?LINE   515
06EE              2705   _229:
               R  2706           ?SYMB   '',$,102,6
06EE 0802         2707           ADD     R0,#02h
               R  2708           ?SYMB   '',$,96,6
06F0 9860         2709           MOV     R6,[R0+]
               R  2710           ?SYMB   '',$,96,4
06F2 9880         2711           MOV     R8,[R0+]
               R  2712           ?SYMB   '',$,96,2
06F4 9890         2713           MOV     R9,[R0+]
               R  2714           ?SYMB   '',$,96,0
06F6 DB00         2715           RETS
                  2716   _MEInit_AnaCOPS ENDP
               R  2717           ?SYMB   '',$,17,515
                  2718   ; me_init.c  516        
                  2719   ; me_init.c  517        /*----------------------------------------------------------------
                  2720   ; me_init.c  518         *
                  2721   ; me_init.c  519         * FirstSearch: Search begin :, match ,
                  2722   ; me_init.c  520         * other:               Search ','or end, calculate indirectly value
                  2723   ; me_init.c  521         *
                  2724   ; me_init.c  522         * Source Format :
                  2725   ; me_init.c  523         * integer              : ---> ',' or '\0'
                  2726   ; me_init.c  524         *                                ---> ',' or '\0'
                  2727   ; me_init.c  525         *
                  2728   ; me_init.c  526         *--------------------------------------------------------------*/
                  2729   ; me_init.c  527        
                  2730   ; me_init.c  528        int ME_Search_integer( char *SrcStr, BYTE * DestInt, BOOL FirstSearch )
                  2731   ; me_init.c  529        {
                  2732           ?LINE   529
                  2733           PUBLIC  _ME_Search_integer
               R  2734           ?SYMB   'ME_Search_integer',_ME_Search_integer,37,16
                  2735           ?SYMB   '',529,8,34
                  2736   _ME_Search_integer      PROC    FAR
                  2737           ?SYMB   '',0340H,95,0
06F8 8890         2738           MOV     [-R0],R9
               R  2739           ?SYMB   '',$,96,2
06FA 8880         2740           MOV     [-R0],R8
               R  2741           ?SYMB   '',$,96,4
06FC 8860         2742           MOV     [-R0],R6
               R  2743           ?SYMB   '',$,96,6
06FE 26F00800     2744           SUB     R0,#08h
               R  2745           ?SYMB   '',$,96,14
                  2746   ; Locals:
                  2747   ;     CodeInt = offset 0
                  2748   ; 
                  2749   ; Statics:
                  2750   ; 
                  2751   ; CSEs:
                  2752   ;     i = R1
                  2753   ;     AnaCount = R8
                  2754   ;     pBegin = R9R6
                  2755   ;     pBegin + i = R2R3
                  2756   ;     SrcStr = R12R13
                  2757   ;     DestInt = R14R15
                  2758   ;     FirstSearch = offset 14
                  2759   ; 
                  2760           ?SYMB   'SrcStr',4,99,270
                  2761           ?SYMB   'DestInt',1,99,437
                  2762           ?SYMB   'FirstSearch',5,99,262
                  2763           ?SYMB   'i',2,98,16
                  2764           ?SYMB   'AnaCount',6,98,16
               R  2765           ?SYMB   '0',$,101,5
               R  2766           ?SYMB   'R12R13',$,100,4
               R  2767           ?SYMB   'R14R15',$,100,1
                  2768   ; me_init.c  530                int i, AnaCount = 0;
                  2769           ?LINE   530
0702 E008         2770           MOV     R8,#00h
               R  2771           ?SYMB   'R8',$,100,6
                  2772           ?SYMB   'pBegin',3,98,270
                  2773           ?SYMB   'CodeInt',7,98,570
               R  2774           ?SYMB   '-e',$,101,7
                  2775   ; me_init.c  531                char *pBegin;
                  2776   ; me_init.c  532                char CodeInt[8];
                  2777   ; me_init.c  533        
                  2778   ; me_init.c  534                if( FirstSearch )
                  2779           ?LINE   534
0704 D4100E00     2780           MOV     R1,[R0+#0EH]
0708 2D16         2781           JMPR    cc_Z,_243
                  2782   ; me_init.c  535                {
                  2783   ; me_init.c  536                        if( (pBegin =  strstr( SrcStr, ":" )) == NULL )
                  2784           ?LINE   536
070A 88C0         2785           MOV     [-R0],R12
               R  2786           ?SYMB   '',$,96,16
070C 88D0         2787           MOV     [-R0],R13
               R  2788           ?SYMB   '',$,96,18
070E 88E0         2789           MOV     [-R0],R14
               R  2790           ?SYMB   '',$,96,20
0710 88F0         2791           MOV     [-R0],R15
               R  2792           ?SYMB   '',$,96,22
0712 E6FE0000  R  2793           MOV     R14,#POF _230
               R  2794           ?SYMB   '',$,102,1
0716 E6FF0000  R  2795           MOV     R15,#PAG _230
071A DA000000  R  2796           CALLS   SEG _strstr,_strstr
               R  2797           ?SYMB   '',$,102,4
071E F094         2798           MOV     R9,R4
0720 F065         2799           MOV     R6,R5
               R  2800           ?SYMB   'R9R6',$,100,3
0722 F0C6         2801           MOV     R12,R6
0724 98F0         2802           MOV     R15,[R0+]
               R  2803           ?SYMB   '',$,96,20
0726 98E0         2804           MOV     R14,[R0+]
               R  2805           ?SYMB   '',$,96,18
               R  2806           ?SYMB   'R14R15',$,100,1
0728 98D0         2807           MOV     R13,[R0+]
               R  2808           ?SYMB   '',$,96,16
072A F01C         2809           MOV     R1,R12
072C 98C0         2810           MOV     R12,[R0+]
               R  2811           ?SYMB   '',$,96,14
               R  2812           ?SYMB   'R12R13',$,100,4
072E 7019         2813           OR      R1,R9
0730 2D25         2814           JMPR    cc_Z,_251
                  2815   ; me_init.c  537                                return -1;
                  2816   ; me_init.c  538                        pBegin +=1;
                  2817           ?LINE   538
0732 0891         2818           ADD     R9,#01h
               R  2819           ?SYMB   '',$,102,3
               R  2820           ?SYMB   'R9R6',$,100,3
                  2821   ; me_init.c  539                }
                  2822           ?LINE   539
0734 0D02         2823           JMPR    cc_UC,_244
0736              2824   _243:
               R  2825           ?SYMB   '',$,102,3
                  2826   ; me_init.c  540                else
                  2827   ; me_init.c  541                        pBegin = SrcStr;
                  2828           ?LINE   541
0736 F09C         2829           MOV     R9,R12
0738 F06D         2830           MOV     R6,R13
               R  2831           ?SYMB   'R9R6',$,100,3
073A              2832   _244:
                  2833   ; me_init.c  542        
                  2834   ; me_init.c  543                for( i=0; i< 8; i++ )
                  2835           ?LINE   543
073A E001         2836           MOV     R1,#00h
               R  2837           ?SYMB   'R1',$,100,2
073C              2838   _245:
                  2839   ; me_init.c  544                {
                  2840   ; me_init.c  545                        if( *(pBegin+i) == ',' || *(pBegin+i) == 0 )
                  2841           ?LINE   545
073C F029         2842           MOV     R2,R9
073E F036         2843           MOV     R3,R6
0740 0021         2844           ADD     R2,R1
0742 DC43         2845           EXTP    R3,#01h
0744 A982     1   2846           MOVB    RL4,[R2]
0746 47F82C00     2847           CMPB    RL4,#02Ch
074A 2D03         2848           JMPR    cc_EQ,_246
074C DC43         2849           EXTP    R3,#01h
074E A982     1   2850           MOVB    RL4,[R2]
0750 3D09         2851           JMPR    cc_NZ,_247
0752              2852   _246:
               R  2853           ?SYMB   '',$,102,6
               R  2854           ?SYMB   '',$,102,3
                  2855   ; me_init.c  546                        {
                  2856   ; me_init.c  547                                // Calculate the size of Analysed Str
                  2857   ; me_init.c  548                                AnaCount = pBegin +i -SrcStr;
                  2858           ?LINE   548
0752 F082         2859           MOV     R8,R2
0754 208C         2860           SUB     R8,R12
               R  2861           ?SYMB   'R8',$,100,6
                  2862   ; me_init.c  549                                if( *(pBegin+i) == ',' )
                  2863           ?LINE   549
0756 DC43         2864           EXTP    R3,#01h
0758 A9C2     1   2865           MOVB    RL6,[R2]
075A 47FC2C00     2866           CMPB    RL6,#02Ch
075E 3D09         2867           JMPR    cc_NE,_249
                  2868   ; me_init.c  550                                        AnaCount += 1;
                  2869           ?LINE   550
0760 0881         2870           ADD     R8,#01h
               R  2871           ?SYMB   '',$,102,6
               R  2872           ?SYMB   'R8',$,100,6
                  2873   ; me_init.c  551                                break;
                  2874           ?LINE   551
0762 0D07         2875           JMPR    cc_UC,_249
                  2876   ; me_init.c  552                        }
                  2877           ?LINE   552
0764              2878   _247:
               R  2879           ?SYMB   '',$,102,4
               R  2880           ?SYMB   'R12R13',$,100,4
               R  2881           ?SYMB   'R9R6',$,100,3
                  2882   ; me_init.c  553                        CodeInt[i] = *(pBegin+i);
                  2883           ?LINE   553
0764 DC43         2884           EXTP    R3,#01h
0766 A942     1   2885           MOVB    RL2,[R2]
0768 F031         2886           MOV     R3,R1
076A 0030         2887           ADD     R3,R0
076C B943         2888           MOVB    [R3],RL2
               R  2889           ?SYMB   '',$,102,2
               R  2890           ?SYMB   'R1',$,100,2
                  2891           ?LINE   543
076E 8071         2892           CMPI1   R1,#07h
0770 CDE5         2893           JMPR    cc_SLT,_245
                  2894   ; me_init.c  554                }
                  2895           ?LINE   554
0772              2896   _249:
               R  2897           ?SYMB   '',$,102,4
               R  2898           ?SYMB   '',$,102,3
                  2899   ; me_init.c  555                if( i >= 8 || i <= 0 )
                  2900           ?LINE   555
0772 46F10800     2901           CMP     R1,#08h
0776 DD02         2902           JMPR    cc_SGE,_251
0778 4810         2903           CMP     R1,#00h
077A AD03         2904           JMPR    cc_SGT,_252
077C              2905   _251:
               R  2906           ?SYMB   '',$,102,1
               R  2907           ?SYMB   '',$,102,6
               R  2908           ?SYMB   '',$,102,2
                  2909   ; me_init.c  556                        return -1;
                  2910           ?LINE   556
077C E6F4FFFF     2911           MOV     R4,#0FFFFh
0780 0D0F         2912           JMPR    cc_UC,_253
0782              2913   _252:
               R  2914           ?SYMB   'R8',$,100,6
               R  2915           ?SYMB   'R1',$,100,2
               R  2916           ?SYMB   'R14R15',$,100,1
                  2917   ; me_init.c  557        
                  2918   ; me_init.c  558                CodeInt[i]=0;
                  2919           ?LINE   558
0782 E10C         2920           MOVB    RL6,#00h
0784 0010         2921           ADD     R1,R0
               R  2922           ?SYMB   '',$,102,2
0786 B9C1         2923           MOVB    [R1],RL6
                  2924   ; me_init.c  559                *DestInt = atoi( CodeInt );
                  2925           ?LINE   559
0788 F09E         2926           MOV     R9,R14
078A F06F         2927           MOV     R6,R15
078C F0C0         2928           MOV     R12,R0
078E 66FCFF3F     2929           AND     R12,#03FFFh
0792 F2FD02FE     2930           MOV     R13,DPP1
0796 DA000000  R  2931           CALLS   SEG _atoi,_atoi
               R  2932           ?SYMB   '',$,102,1
               R  2933           ?SYMB   '',$,102,1
079A DC46         2934           EXTP    R6,#01h
079C B989     1   2935           MOVB    [R9],RL4
                  2936   ; me_init.c  560        
                  2937   ; me_init.c  561                return AnaCount ;
                  2938           ?LINE   561
079E F048         2939           MOV     R4,R8
                  2940   ; me_init.c  562        }
                  2941           ?LINE   562
07A0              2942   _253:
               R  2943           ?SYMB   '',$,102,6
               R  2944           ?SYMB   '',$,102,7
07A0 06F00800     2945           ADD     R0,#08h
               R  2946           ?SYMB   '',$,96,6
07A4 9860         2947           MOV     R6,[R0+]
               R  2948           ?SYMB   '',$,96,4
07A6 9880         2949           MOV     R8,[R0+]
               R  2950           ?SYMB   '',$,96,2
07A8 9890         2951           MOV     R9,[R0+]
               R  2952           ?SYMB   '',$,96,0
07AA DB00         2953           RETS
                  2954   _ME_Search_integer      ENDP
               R  2955           ?SYMB   '',$,17,562
                  2956   ; me_init.c  563        
                  2957   ; me_init.c  564        /*
                  2958   ; me_init.c  565        int ME_Search_integer_Alpha( char *SrcStr, char * DestInt, int DestLen,
                          BOOL FirstSearch )
                  2959   ; me_init.c  566        {
                  2960   ; me_init.c  567                int i, AnaCount;
                  2961   ; me_init.c  568                char *pBegin;
                  2962   ; me_init.c  569                char CodeInt[MEINIT_ATRET_STRLEN];
                  2963   ; me_init.c  570        
                  2964   ; me_init.c  571                if( FirstSearch )
                  2965   ; me_init.c  572                {
                  2966   ; me_init.c  573                        if( (pBegin =  strstr( SrcStr, ":" )) == NULL )
                  2967   ; me_init.c  574                                return -1;
                  2968   ; me_init.c  575                        pBegin +=1;
                  2969   ; me_init.c  576                }
                  2970   ; me_init.c  577                else
                  2971   ; me_init.c  578                        pBegin = SrcStr;
                  2972   ; me_init.c  579        
                  2973   ; me_init.c  580                for( i=0; i< DestLen-1; i++ )
                  2974   ; me_init.c  581                {
                  2975   ; me_init.c  582                        if( *(pBegin+i) == ',' || *(pBegin+i) == 0 )
                  2976   ; me_init.c  583                        {
                  2977   ; me_init.c  584                                // Calculate the size of Analysed Str
                  2978   ; me_init.c  585                                AnaCount = pBegin +i -SrcStr;
                  2979   ; me_init.c  586                                if( *(pBegin+i) == ',' )
                  2980   ; me_init.c  587                                        AnaCount += 1;
                  2981   ; me_init.c  588                                break;
                  2982   ; me_init.c  589                        }
                  2983   ; me_init.c  590                        CodeInt[i] = *(pBegin+i);
                  2984   ; me_init.c  591                }
                  2985   ; me_init.c  592                if( i >= DestLen-1 || i <= 0 )
                  2986   ; me_init.c  593                {
                  2987   ; me_init.c  594                        DestInt[0] = 0;
                  2988   ; me_init.c  595                        return -1;
                  2989   ; me_init.c  596                }
                  2990   ; me_init.c  597        
                  2991   ; me_init.c  598                CodeInt[i]=0;
                  2992   ; me_init.c  599                strcpy( DestInt, CodeInt );
                  2993   ; me_init.c  600        
                  2994   ; me_init.c  601                return AnaCount ;
                  2995   ; me_init.c  602        }
                  2996   ; me_init.c  603        */
                  2997   ; me_init.c  604        
                  2998   ; me_init.c  605        /*----------------------------------------------------------------
                  2999   ; me_init.c  606         *
                  3000   ; me_init.c  607         * AllSearch:   Search begin ", match end ",
                  3001   ; me_init.c  608         * Source Format :
                  3002   ; me_init.c  609         * string               " ---> ", or "
                  3003   ; me_init.c  610         *
                  3004   ; me_init.c  611         *--------------------------------------------------------------*/
                  3005   ; me_init.c  612        
                  3006   ; me_init.c  613        int ME_Search_String( char *SrcStr, char *DestStr, int DestLen )
                  3007   ; me_init.c  614        {
                  3008           ?LINE   614
                  3009           PUBLIC  _ME_Search_String
               R  3010           ?SYMB   'ME_Search_String',_ME_Search_String,37,16
                  3011           ?SYMB   '',614,8,34
                  3012   _ME_Search_String       PROC    FAR
                  3013           ?SYMB   '',03c0H,95,0
07AC 8890         3014           MOV     [-R0],R9
               R  3015           ?SYMB   '',$,96,2
07AE 8880         3016           MOV     [-R0],R8
               R  3017           ?SYMB   '',$,96,4
07B0 8870         3018           MOV     [-R0],R7
               R  3019           ?SYMB   '',$,96,6
07B2 8860         3020           MOV     [-R0],R6
               R  3021           ?SYMB   '',$,96,8
07B4 88F0         3022           MOV     [-R0],R15
               R  3023           ?SYMB   '',$,96,10
07B6 88E0         3024           MOV     [-R0],R14
               R  3025           ?SYMB   '',$,96,12
07B8 88D0         3026           MOV     [-R0],R13
               R  3027           ?SYMB   '',$,96,14
07BA 88C0         3028           MOV     [-R0],R12
               R  3029           ?SYMB   '',$,96,16
07BC 26F03000     3030           SUB     R0,#030h
               R  3031           ?SYMB   '',$,96,64
                  3032   ; Locals:
                  3033   ;     MidStr = offset 0
                  3034   ; 
                  3035   ; Statics:
                  3036   ; 
                  3037   ; CSEs:
                  3038   ;     AnaCount = R12
                  3039   ;     pEnd = R8R9
                  3040   ;     pBegin = R6R7
                  3041   ;     len = R1
                  3042   ;     cpylen = R1
                  3043   ;     SrcStr = offset 48
                  3044   ;     DestStr = offset 52
                  3045   ;     DestLen = offset 64
                  3046   ; 
                  3047           ?SYMB   'SrcStr',8,99,270
                  3048           ?SYMB   'DestStr',1,99,270
                  3049           ?SYMB   'DestLen',2,99,16
                  3050           ?SYMB   'AnaCount',3,98,16
                  3051           ?SYMB   'len',5,98,16
                  3052           ?SYMB   'cpylen',4,98,16
                  3053           ?SYMB   'pBegin',7,98,270
                  3054           ?SYMB   'pEnd',6,98,270
                  3055           ?SYMB   'MidStr',9,98,568
               R  3056           ?SYMB   '-40',$,101,9
               R  3057           ?SYMB   '-10',$,101,8
               R  3058           ?SYMB   '0',$,101,2
               R  3059           ?SYMB   '-c',$,101,1
                  3060   ; me_init.c  615                int             AnaCount;
                  3061   ; me_init.c  616                int             len, cpylen;
                  3062   ; me_init.c  617                char    *pBegin, *pEnd, *pTemp;
                  3063   ; me_init.c  618                char    MidStr[MEINIT_ATRET_STRLEN];
                  3064   ; me_init.c  619        
                  3065   ; me_init.c  620                pTemp = SrcStr;
                  3066   ; me_init.c  621        
                  3067   ; me_init.c  622                // Analyse number
                  3068   ; me_init.c  623                if( (pBegin = strstr( pTemp, "\"" )) == NULL )
                  3069           ?LINE   623
07C0 E6FE0000  R  3070           MOV     R14,#POF _254
07C4 E6FF0000  R  3071           MOV     R15,#PAG _254
07C8 DA000000  R  3072           CALLS   SEG _strstr,_strstr
07CC F064         3073           MOV     R6,R4
07CE F075         3074           MOV     R7,R5
               R  3075           ?SYMB   'R6R7',$,100,7
07D0 F087         3076           MOV     R8,R7
07D2 7086         3077           OR      R8,R6
07D4 EA207008  R  3078           JMPA    cc_Z,_261
                  3079   ; me_init.c  624                        goto Search_String_Error;
                  3080   ; me_init.c  625        
                  3081   ; me_init.c  626                if( (pEnd = strstr( pBegin+1, "\"" )) == NULL )
                  3082           ?LINE   626
07D8 F0C6         3083           MOV     R12,R6
07DA F0D7         3084           MOV     R13,R7
07DC 08C1         3085           ADD     R12,#01h
07DE E6FE0000  R  3086           MOV     R14,#POF _254
07E2 E6FF0000  R  3087           MOV     R15,#PAG _254
07E6 DA000000  R  3088           CALLS   SEG _strstr,_strstr
07EA F084         3089           MOV     R8,R4
07EC F095         3090           MOV     R9,R5
               R  3091           ?SYMB   'R8R9',$,100,6
07EE F0C9         3092           MOV     R12,R9
07F0 70C8         3093           OR      R12,R8
07F2 EA207008  R  3094           JMPA    cc_Z,_261
                  3095   ; me_init.c  627                        goto Search_String_Error;
                  3096   ; me_init.c  628        
                  3097   ; me_init.c  629                len = pEnd - pBegin -1;
                  3098           ?LINE   629
07F6 F018         3099           MOV     R1,R8
07F8 2016         3100           SUB     R1,R6
07FA 2811         3101           SUB     R1,#01h
               R  3102           ?SYMB   'R1',$,100,5
                  3103   ; me_init.c  630                cpylen = ( MEINIT_ATRET_STRLEN > len )? len: (MEINIT_ATRET_STRL
                         EN-1);
                  3104           ?LINE   630
07FC F0C1         3105           MOV     R12,R1
07FE 46FC3000     3106           CMP     R12,#030h
0802 DD01         3107           JMPR    cc_SGE,_263
0804              3108   _264:
               R  3109           ?SYMB   '',$,102,5
               R  3110           ?SYMB   '',$,102,5
0804 0D02         3111           JMPR    cc_UC,_265
0806              3112   _263:
0806 E6FC2F00     3113           MOV     R12,#02Fh
080A              3114   _265:
080A F01C         3115           MOV     R1,R12
               R  3116           ?SYMB   'R1',$,100,4
                  3117   ; me_init.c  631        
                  3118   ; me_init.c  632                memcpy( MidStr, pBegin+1, cpylen );
                  3119           ?LINE   632
080C 8810         3120           MOV     [-R0],R1
               R  3121           ?SYMB   '',$,96,66
080E 8810         3122           MOV     [-R0],R1
               R  3123           ?SYMB   '',$,96,68
0810 E04C         3124           MOV     R12,#04h
0812 00C0         3125           ADD     R12,R0
0814 66FCFF3F     3126           AND     R12,#03FFFh
0818 F2FD02FE     3127           MOV     R13,DPP1
081C F0E6         3128           MOV     R14,R6
081E F0F7         3129           MOV     R15,R7
0820 08E1         3130           ADD     R14,#01h
0822 DA000000  R  3131           CALLS   SEG _memcpy,_memcpy
               R  3132           ?SYMB   '',$,102,7
               R  3133           ?SYMB   '',$,102,4
0826 0802         3134           ADD     R0,#02h
               R  3135           ?SYMB   '',$,96,66
0828 9810         3136           MOV     R1,[R0+]
               R  3137           ?SYMB   '',$,96,64
               R  3138           ?SYMB   'R1',$,100,4
                  3139   ; me_init.c  633                MidStr[cpylen]=0;
                  3140           ?LINE   633
082A E10C         3141           MOVB    RL6,#00h
082C 0010         3142           ADD     R1,R0
               R  3143           ?SYMB   '',$,102,4
082E B9C1         3144           MOVB    [R1],RL6
                  3145   ; me_init.c  634        
                  3146   ; me_init.c  635                // Calculate the size of Analysed Str
                  3147   ; me_init.c  636                AnaCount = pEnd - SrcStr +1;
                  3148           ?LINE   636
0830 D4703000     3149           MOV     R7,[R0+#030H]
0834 F0C8         3150           MOV     R12,R8
0836 20C7         3151           SUB     R12,R7
0838 08C1         3152           ADD     R12,#01h
               R  3153           ?SYMB   'R12',$,100,3
                  3154   ; me_init.c  637                // filtrate ',' that follows ':'
                  3155   ; me_init.c  638                if( *(pEnd+1) == ',')
                  3156           ?LINE   638
083A DC49         3157           EXTP    R9,#01h
083C F4280100 1   3158           MOVB    RL1,[R8+#01H]
0840 47F22C00     3159           CMPB    RL1,#02Ch
0844 3D01         3160           JMPR    cc_NE,_259
                  3161   ; me_init.c  639                        AnaCount +=1;
                  3162           ?LINE   639
0846 08C1         3163           ADD     R12,#01h
               R  3164           ?SYMB   '',$,102,3
               R  3165           ?SYMB   'R12',$,100,3
0848              3166   _259:
               R  3167           ?SYMB   '',$,102,6
                  3168   ; me_init.c  640        
                  3169   ; me_init.c  641                // convert string format, USC2->ASCII
                  3170   ; me_init.c  642                //STK_Convert_USC22ASCII( MidStr, DestStr, DestLen, STK_ALPHA_8
                         0 );
                  3171   ; me_init.c  643                strncpy( DestStr, MidStr, DestLen );
                  3172           ?LINE   643
0848 F08C         3173           MOV     R8,R12
084A D4904000     3174           MOV     R9,[R0+#040H]
084E 8890         3175           MOV     [-R0],R9
               R  3176           ?SYMB   '',$,96,66
0850 D4C03600     3177           MOV     R12,[R0+#036H]
               R  3178           ?SYMB   '',$,102,3
0854 D4D03800     3179           MOV     R13,[R0+#038H]
0858 E02E         3180           MOV     R14,#02h
085A 00E0         3181           ADD     R14,R0
085C 66FEFF3F     3182           AND     R14,#03FFFh
0860 F2FF02FE     3183           MOV     R15,DPP1
0864 DA000000  R  3184           CALLS   SEG _strncpy,_strncpy
0868 0802         3185           ADD     R0,#02h
               R  3186           ?SYMB   '',$,96,64
086A F0C8         3187           MOV     R12,R8
               R  3188           ?SYMB   'R12',$,100,3
                  3189   ; me_init.c  644        
                  3190   ; me_init.c  645                return AnaCount;
                  3191           ?LINE   645
086C F04C         3192           MOV     R4,R12
086E 0D09         3193           JMPR    cc_UC,_262
                  3194   ; me_init.c  646        
                  3195   ; me_init.c  647        Search_String_Error:
                  3196           ?LINE   647
0870              3197   _261:
               R  3198           ?SYMB   '',$,102,3
               R  3199           ?SYMB   'Search_String_Error',_261,27,0
                  3200   ; me_init.c  648                DestStr[0] = 0;
                  3201           ?LINE   648
0870 E10C         3202           MOVB    RL6,#00h
0872 D4803400     3203           MOV     R8,[R0+#034H]
0876 D4903600     3204           MOV     R9,[R0+#036H]
087A DC49         3205           EXTP    R9,#01h
087C B9C8     1   3206           MOVB    [R8],RL6
                  3207   ; me_init.c  649                return -1;
                  3208           ?LINE   649
087E E6F4FFFF     3209           MOV     R4,#0FFFFh
                  3210   ; me_init.c  650        }
                  3211           ?LINE   650
0882              3212   _262:
               R  3213           ?SYMB   '',$,102,9
0882 06F03800     3214           ADD     R0,#038h
               R  3215           ?SYMB   '',$,96,8
0886 9860         3216           MOV     R6,[R0+]
               R  3217           ?SYMB   '',$,96,6
0888 9870         3218           MOV     R7,[R0+]
               R  3219           ?SYMB   '',$,96,4
088A 9880         3220           MOV     R8,[R0+]
               R  3221           ?SYMB   '',$,96,2
088C 9890         3222           MOV     R9,[R0+]
               R  3223           ?SYMB   '',$,96,0
088E DB00         3224           RETS
                  3225   _ME_Search_String       ENDP
               R  3226           ?SYMB   '',$,17,650
                  3227   ; me_init.c  651        
                  3228   ; me_init.c  652        
                  3229   ; me_init.c  653        
                  3230   ; me_init.c  654        // End of Program
                  3231   ; me_init.c  655        
                  3232   ; me_init.c  656        
                  3233   ME_INIT_4_PR    ENDS
                  3234   
                  3235   ME_INIT_5_CO    SECTION DATA
002C 2200         3236   _254    DB      022h,00h
002E 3A00         3237   _230    DB      03Ah,00h
0030 5E53434B     3238   _7      DB      05Eh,053h,043h,04Bh,053h,03Ah,020h,031h,02Ch,030h
0034 533A2031    
0038 2C30        
003A 00           3239           DB      00h
003B 5E53434B     3240   _5      DB      05Eh,053h,043h,04Bh,053h,03Ah,020h,031h,02Ch,031h
003F 533A2031    
0043 2C31        
0045 00           3241           DB      00h
0046 5E53434B     3242   _8      DB      05Eh,053h,043h,04Bh,053h,03Ah,020h,030h,02Ch,030h
004A 533A2030    
004E 2C30        
0050 00           3243           DB      00h
0051 5E53434B     3244   _6      DB      05Eh,053h,043h,04Bh,053h,03Ah,020h,030h,02Ch,031h
0055 533A2030    
0059 2C31        
005B 00           3245           DB      00h
                  3246   ME_INIT_5_CO    ENDS
                  3247   
                  3248   C166_INIT       SECTION DATA WORD GLOBAL 'CINITROM'
0000 0600         3249           DW      06h
0002 00000000  R  3250           DPPTR   ME_INIT_ID_NB_ENTRY,ME_INIT_IR_NB_ENTRY
0006 00000000    
000A 2803         3251           DW      0328h
                  3252   C166_INIT       ENDS
                  3253   
                  3254   C166_BSS        SECTION DATA WORD GLOBAL 'CINITROM'
0000 0600         3255           DW      06h
0002 00000000  R  3256           DPPTR   ME_INIT_3_FB_ENTRY
0006 1A00         3257           DW      01Ah
                  3258   C166_BSS        ENDS
                  3259   
                  3260           EXTERN  _SetTimer:FAR
                  3261           EXTERN  _strlen:FAR
                  3262           EXTERN  _TimerId:WORD
                  3263           EXTERN  _strncpy:FAR
                  3264           EXTERN  _MAT_Send:FAR
                  3265           EXTERN  _atoi:FAR
                  3266           EXTERN  _GetResultLength:FAR
                  3267           EXTERN  _me_fsm_data:WORD
                  3268           ?SYMB   'ME_FSM',0,40,585
                  3269           ?SYMB   'state',0,23,16
                  3270           ?SYMB   '',16,18,0
                  3271           EXTERN  _ME_TimerProc:FAR
                  3272           EXTERN  _KillTimer:FAR
                  3273           EXTERN  _request_head:WORD
                  3274           ?SYMB   '',01a024cH,38,590
                  3275           ?SYMB   'ME_REQUEST',0,40,588
                  3276           ?SYMB   'cmd',0,23,16
                  3277           ?SYMB   'arg1',16,23,16
                  3278           ?SYMB   'arg2',32,23,16
                  3279           ?SYMB   'arg3',48,23,16
                  3280           ?SYMB   'cmddata',64,23,273
                  3281           ?SYMB   'cmddata_len',96,23,16
                  3282           ?SYMB   'reply',112,23,499
                  3283           ?SYMB   'error',144,23,16
                  3284           ?SYMB   'errcode',160,23,16
                  3285           ?SYMB   'index',176,23,16
                  3286           ?SYMB   'result',192,23,273
                  3287           ?SYMB   'result_len',224,23,16
                  3288           ?SYMB   'next',240,23,590
                  3289           ?SYMB   '',272,18,0
                  3290           EXTERN  _strstr:FAR
                  3291           EXTERN  _memcpy:FAR
                  3292           EXTERN  __cpfnb:FAR
                  3293   C166_DGROUP     DGROUP  ME_INIT_ID_NB
                  3294           REGDEF  R0-R15
                  3295           END

total errors: 0, warnings: 0

